<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh"><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://dygck.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dygck.github.io/" rel="alternate" type="text/html" hreflang="zh" /><updated>2018-10-12T22:42:24+08:00</updated><id>https://dygck.github.io/</id><title type="html">在风陵渡口学coding!</title><subtitle>别点我!
</subtitle><author><name>Jeff</name><email>fj1945@live.cn</email></author><entry><title type="html">Emmet的主要语法功能简记</title><link href="https://dygck.github.io/emmet-notes" rel="alternate" type="text/html" title="Emmet的主要语法功能简记" /><published>2018-10-12T22:24:31+08:00</published><updated>2018-10-12T22:24:31+08:00</updated><id>https://dygck.github.io/emmet-notes</id><content type="html" xml:base="https://dygck.github.io/emmet-notes">&lt;p&gt;下面是一些emmet速写语法规则简要描述:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 表示标签并列&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 指向子级&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; 跳转到父级 ^^父级在上一层,以此类推 ,最高可以和根平级,但是不能超过.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; 打组,易实现跨跃级别结构&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; 实现数递增 1开始, &lt;code class=&quot;highlighter-rouge&quot;&gt;$$&lt;/code&gt; 从01开始 以此类推&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$@num1*num2&lt;/code&gt;
  从num1开始,到num1+num2-1结束.@的作用改变$的基准数,$@3*5 就是3,4,5,6,7&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$@-*num&lt;/code&gt; 从num开始递减,减到1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$@-num1*num2&lt;/code&gt;从num1+num2-1开始递减到num1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[属性=属性值]&lt;/code&gt; 给标签增加属性&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{innertext}&lt;/code&gt; 给标签增加文本&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; or [id=value]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; or [class=value]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.a.b.c&lt;/code&gt; 带有空格的类&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    div[CLASS=&quot;fa fb fi&quot;] &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;div.fa.fb.fi
    div[CLASS=&quot;fa fb fi&quot;] &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;div.fa.fb.fi
    div[class=&quot;fa fb fi&quot;] &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;div.fa.fb.fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;标签推导&lt;/code&gt; 通过常见规则自动添加必要内容&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ol&amp;gt;.item$*5
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="html" /><category term="技巧" /><summary type="html">下面是一些emmet速写语法规则简要描述: + 表示标签并列 &amp;gt; 指向子级 ^ 跳转到父级 ^^父级在上一层,以此类推 ,最高可以和根平级,但是不能超过. () 打组,易实现跨跃级别结构 $ 实现数递增 1开始, $$ 从01开始 以此类推 $@num1*num2 从num1开始,到num1+num2-1结束.@的作用改变$的基准数,$@3*5 就是3,4,5,6,7 $@-*num 从num开始递减,减到1 $@-num1*num2从num1+num2-1开始递减到num1 [属性=属性值] 给标签增加属性 {innertext} 给标签增加文本 # or [id=value] . or [class=value] .a.b.c 带有空格的类 div[CLASS=&quot;fa fb fi&quot;] &amp;lt;=&amp;gt;div.fa.fb.fi div[CLASS=&quot;fa fb fi&quot;] &amp;lt;=&amp;gt;div.fa.fb.fi div[class=&quot;fa fb fi&quot;] &amp;lt;=&amp;gt;div.fa.fb.fi 标签推导 通过常见规则自动添加必要内容 ol&amp;gt;.item$*5 &amp;lt;ol&amp;gt; &amp;lt;li class=&quot;item1&quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&quot;item2&quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&quot;item3&quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&quot;item4&quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&quot;item5&quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt;</summary></entry><entry><title type="html">Python维基百科查询库使用</title><link href="https://dygck.github.io/wikipedia" rel="alternate" type="text/html" title="Python维基百科查询库使用" /><published>2018-10-11T21:06:40+08:00</published><updated>2018-10-11T21:06:40+08:00</updated><id>https://dygck.github.io/wikipedia</id><content type="html" xml:base="https://dygck.github.io/wikipedia">&lt;h2 id=&quot;设置代理和语言&quot;&gt;设置代理和语言&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/local/bin/python3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# from sys import argv&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;wikipedia&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wiki&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# from os import environ&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# import pprint&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# set proxy and change language&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http_proxy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:1087&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https_proxy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://127.0.0.1:1087&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wiki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;zh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wikipedia-search-提供搜索建议&quot;&gt;wikipedia .search (提供搜索建议)&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;wiki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;指南车&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 第2个参数搜索建议数量，默认为10.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['指南车',
 '高堂隆',
 '指南针',
 '张衡',
 '北京市',
 '王振鐸',
 '维基导游',
 '记里鼓车',
 '湖北广播电视台',
 '上海市',
 '重庆市',
 '新加坡',
 '消防員',
 '俄罗斯',
 '印度']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wikipediasummary-获得词条的概述&quot;&gt;wikipedia.summary (获得词条的概述)&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wiki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;象棋&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#摘要&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;象棋是中國大陸、台灣、越南、琉球地區所流行的傳統的2人對弈棋類遊戲。与国际象棋及围棋并列世界三大棋类之一。類似的有朝鮮將棋、日本將棋。中國大陸稱「Chess」為「国际象棋」，以此作為區別，又稱中國象棋，主要流行于全球華人、越南人及琉球人社區。是首屆世界智力運動會的正式比賽項目之一。


== 歷史 ==


=== 詞義演變 ===
象棋、象戲，在中文有多種含意：從古到今可指六博、彈棋、圍棋、雙陸、象徵的遊戲、中國象棋簡稱、各種象棋類遊戲。

象棋一詞最早出現在戰國，指象牙作的棋子，亦可指象徵猛禽獵魚之戲的六博。因六博棋子有其他材質，也有人認為象棋就是表示六博是象徵的遊戲。《楚辭·招魂》：「菎蔽象棋，有六博些。」王逸注：「以菎蔽作箸，象牙為棋。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wikipediapagekeyword获得页面的对象&quot;&gt;wikipedia.page(“keyword”)(获得页面的对象)&lt;/h2&gt;
&lt;p&gt;有这个页面的类别、内容、链接、图片链接、摘要、参考
categories、content、links、imglink、summary、references、url&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wiki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pagecontent得到页面内容&quot;&gt;page.content(得到页面内容)&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;content_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content_obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;JavaScript，通常缩写为JS，是一种高级的，解释执行的编程语言。JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。
虽然JavaScript与Java这门语言不管是在名字上，或是在语法上都有很多相似性，但这两门编程语言从设计之初就有很大的不同，JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似（例如if条件语句、while循环、switch语句、do-while循环等）。
在客户端，JavaScript在传统意义上被实现为一种解释语言，但在最近，它已经可以被即时编译（JIT）执行。随着最新的HTML5和CSS3语言标准的推行它还可用于游戏、桌面和移动应用程序的开发和在服务器端网络环境运行，如Node.js。


== 历史 ==


=== 肇始於網景 ===
1993年，伊利諾大學厄巴納-香檳分校的國家超級電腦應用中心（NCSA）發表了NCSA Mosaic，這是最早流行的圖形介面網頁瀏覽器，它在全球資訊網的普及上發揮了重要作用。1994年，一家名為Mosaic Communications的公司在加州山景城成立了，並雇用了許多原來的NCSA Mosaic開發者用來開發Mosaic Netscape，該公司的目標是取代NCSA Mosaic成為世界第一的網頁瀏覽器。第一個版本的網頁瀏覽器Mosaic Netscape 0.9於1994年底發布。在四個月內，已經佔據了四分之三的瀏覽器市場，並成為1990年代網際網路的主要瀏覽器。為避免NCSA的商標所有權問題，該瀏覽器於同年更名為Netscape Navigator，該公司命名為Netscape Communications。網景預見到網路需要變得更動態。公司的創始人馬克·安德森認為HTML需要一種膠水語言，讓網頁設計師和兼職程式設計師可以很容易地使用它來組裝圖片和外掛程式之類的元件，且程式碼可以直接編寫在網頁標記中。
1995年，網景招募了布兰登·艾克，目標是把Scheme語言嵌入到Netscape Navigator瀏覽器當中。但更早之前，網景已經跟昇阳合作在Netscape Navigator中支援Java，這時網景內部產生激烈的爭論。後來網景決定發明一種與Java搭配使用的輔助腳本語言並且語法上有些類似，這個決策導致排除了採用現有的語言，例如Perl、Python、Tcl或Scheme。為了在其他競爭提案中捍衛JavaScript這個想法，公司需要有一個可以運作的原型。艾克在1995年5月僅花了十天時間就把原型設計出來了。
最初命名為Mocha，1995年9月在Netscape Navigator 2.0的Beta版中改名為LiveScript，同年12月，Netscape Navigator 2.0 Beta 3中部署時被重新命名為JavaScript，當時网景公司与昇阳电脑公司组成的开发联盟为了让这门语言搭上Java这个编程语言“热词”，因此将其临时改名为JavaScript，日后这成为大众对这门语言有诸多误解的原因之一。


=== 微軟採用 ===
JavaScript推出后在浏览器上大获成功，微软公司在不久后就为Internet Explorer 3浏览器推出了JScript，以与处于市场领导地位的网景产品同台竞争。JScript也是一种JavaScript实现，这两个JavaScript语言版本在浏览器端共存意味着语言标准化的缺失，发展初期，JavaScript的标准并未确定，同期有网景的JavaScript，微软的JScript雙峰並峙。除此之外，微軟也在網頁技術上加入了不少專屬物件，使不少網頁使用非微軟平台及瀏覽器無法正常顯示，導致在瀏覽器大戰期間網頁設計者通常會把「用Netscape可達到最佳效果」或「用IE可達到最佳效果」的標誌放在首頁。隨著Internet Explorer 4的發布，微軟引入了動態HTML的概念，但語言實現和不同專有化的文件物件模型的差異仍然存在，成為網路上普及使用JavaScript的阻礙。


=== 标准化 ===
1996年11月，網景正式向ECMA（欧洲计算机制造商协会）提交語言標準。1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262。JavaScript成為了ECMAScript最著名的實現之一。除此之外，ActionScript和JScript也都是ECMAScript规范的实现语言。儘管JavaScript作為給非程式人員的腳本語言，而非作為給程式人員的程式語言來推廣和宣傳，但是JavaScript具有非常豐富的特性。


== 概論 ==
一般来说，完整的JavaScript包括以下几个部分：

ECMAScript，描述了该语言的语法和基本对象
文档对象模型（DOM），描述处理网页内容的方法和接口
浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口JavaScript的基本特点如下：

是一种解释性脚本语言（代码不进行预编译）。
主要用来向HTML页面添加交互行为。
可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。JavaScript常用来完成以下任务：

嵌入动态文本于HTML页面
对浏览器事件作出响应
读写HTML元素
在数据被提交到服务器之前验证数据
检测访客的浏览器信息
控制cookies，包括创建和修改等


== 特性 ==
不同於伺服器端腳本語言，例如PHP与ASP，JavaScript主要被作为客户端腳本語言在用戶的瀏覽器上運行，不需要伺服器的支持。所以在早期程式設計師比較青睞於JavaScript以減少對伺服器的負擔，而與此同時也帶來另一個問題：安全性。而隨著伺服器的強壯，雖然現在的程序員更喜歡運行於伺服端的腳本以保證安全，但JavaScript仍然以其跨平台、容易上手等優勢大行其道。同时，有些特殊功能（如AJAX）必须依赖JavaScript在客户端进行支持。隨著引擎如V8和框架如Node.js的發展，及其事件驅動及異步IO等特性，JavaScript逐漸被用來編寫伺服器端程式。且在近几年中，Node.js的出世，让JavaScript也具有了一定的服务器功能，且在某些方面比PHP的效果更为显著。


=== 指令式与结构化 ===
JavaScript从支持许多C语言的结构化编程语法（例如if条件语句、while循环、switch语句、do-while循环等）。但作用域是一个例外：JavaScript只支持使用var关键字来定义变量的函数作用域。ECMAScript加入了let关键字来支持块级作用域，意味着JavaScript现在既支持函数作用域又支持块级作用域。正如C语言一样，JavaScript中的表达式和语句是不同的。与C不同，JavaScript支持自动在语句末添加分号。


=== 动态化 ===
正如大部分脚本语言，类型与值而不是与变量关联。例如x变量可以为数值，随后又可被赋值为字符串。JavaScript提供了包括鸭子类型在内的方法来检测变量类型。


==== Eval() ====
Eval() 函數可以直接執行一個JavaScript函式。例如：


== 编程 ==
JavaScript是一種腳本語言，其原始碼在發往客户端執行之前不需經過編譯，而是將文本格式的字符代碼發送給瀏覽器由瀏覽器解釋執行。直譯語言的弱點是安全性較差，而且在JavaScript中，如果一條執行不了，那麼下面的語言也無法執行。而其解決辦法就是於使用异常处理try{}catch(){}︰

JavaScript被歸類為直譯語言，因為目前主流的引擎都是每次執行時載入程式碼並解譯。V8是將所有程式碼解譯後再開始執行，其他引擎則是逐行解譯（SpiderMonkey會將解譯過的指令暫存，以提高效能，稱為即時編譯），但由於V8的核心部份多數用JavaScript撰寫（而SpiderMonkey是用C++），因此在不同的測試上，兩者效能互有優劣。
與其相對應的是編譯語言，例如C语言，以編譯語言編寫的程式在執行之前，必須經過編譯，將程式碼編譯為機器碼，再加以執行。


== 範例 ==
以下是一個簡單的JavaScript Hello World︰

或是在瀏覽器的地址栏中使用javascript:，以互動方式表示：


== 版本 ==

JavaScript最初開發於1996年，被使用於Netscape Navigator網頁瀏覽器。同年微軟在Internet Explorer發布了一個實作。由於商標問題，這項實作被命名為JScript。1997年，JavaScript已經被網景公司提交給ECMA制定為標準，稱之為ECMAScript，標準編號ECMA-262。目前最新版為ECMA-262 5th Edition。目前ECMA-262 4th Edition正在開發的過程中，與其對應的JavaScript的版本為JavaScript 2.0，目前也正在開發過程中。
下列表格的資訊基於多個參考來源：


== 參見 ==

腳本語言
DMDScript
ECMAScript
JavaScript引擎
JScript
AJAX
JavaScript函式庫


== 參考文獻 ==


== 外部連結 ==
關於JavaScript介紹 Mozilla Developer Network上的資源
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pageurl得到页面地址&quot;&gt;page.url(得到页面地址)&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://zh.wikipedia.org/wiki/JavaScript'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pageimages得到页面图片链接&quot;&gt;page.images(得到页面图片链接)&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['https://upload.wikimedia.org/wikipedia/commons/c/cc/8bit-dynamiclist_%28reversed%29.gif',
 'https://upload.wikimedia.org/wikipedia/commons/f/fb/Confusion_grey.svg',
 'https://upload.wikimedia.org/wikipedia/commons/3/34/Javascript_icon.svg',
 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Node.js_logo.svg',
 'https://upload.wikimedia.org/wikipedia/commons/d/db/Symbol_list_class.svg',
 'https://upload.wikimedia.org/wikipedia/commons/d/df/Wikibooks-logo-en-noslogan.svg',
 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Wikibooks-logo.svg',
 'https://upload.wikimedia.org/wikipedia/commons/c/cd/Zh_conversion_icon_m.svg']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;references&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['http://dx.doi.org/10.1109%2FMC.2012.57',
 'http://archive.oreilly.com/pub/a/javascript/2001/04/06/js_history.html',
 'http://catalogo.bne.es/uhtbin/authoritybrowse.cgi?action=display&amp;amp;authority_id=XX542465',
 'http://catalogue.bnf.fr/ark:/12148/cb12549978q',
 'http://data.bnf.fr/ark:/12148/cb12549978q',
 'http://developer.apple.com/mac/library/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html',
 'http://ejohn.org/blog/versions-of-javascript',
 'http://id.loc.gov/authorities/subjects/sh96004880',
 'http://javascript.about.com/library/bljver.htm',
 'http://msdn.microsoft.com/library/default.asp?url=/library/en-us/script56/html/js56jsoriversioninformation.asp',
 'http://news.microsoft.com/1996/05/29/microsoft-internet-explorer-3-0-beta-now-available/',
 'http://speakingjs.com/es5/ch04.html',
 'http://wp.netscape.com/comprod/columns/techvision/innovators_be.html',
 'http://www.apps.ietf.org/rfc/rfc4329.html#sec-7.1',
 'http://www.computer.org/csdl/mags/co/2012/02/mco2012020007-abs.html',
 'http://www.crockford.com/javascript/javascript.html',
 'http://www.ecma-international.org/publications/standards/Ecma-262.htm',
 'http://www.ecmascript.org/es4/spec/overview.pdf',
 'http://www.technologizer.com/2010/09/16/the-unwelcome-return-of-best-viewed-with-internet-explorer/',
 'http://www.webmasterworld.com/forum91/68.htm',
 'https://d-nb.info/gnd/4420180-1',
 'https://developer.mozilla.org/docs/Web/JavaScript',
 'https://developer.mozilla.org/en-US/docs/JavaScript/New_in_JavaScript/1.7?redirectlocale=en-US&amp;amp;redirectslug=New_in_JavaScript_1.7#Generators',
 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript',
 'https://developer.mozilla.org/en-US/docs/Web/JavaScript',
 'https://developer.mozilla.org/en/JavaScript/Language_Resources',
 'https://web.archive.org/web/20070916144913/http://wp.netscape.com/newsref/pr/newsrelease67.html',
 'https://web.archive.org/web/20080208124612/http://wp.netscape.com/comprod/columns/techvision/innovators_be.html',
 'https://web.archive.org/web/20140316122853/http://www.apps.ietf.org/rfc/rfc4329.html',
 'https://web.archive.org/web/20160719020828/http://archive.oreilly.com/pub/a/javascript/2001/04/06/js_history.html',
 'https://www.idref.fr/034781870',
 'https://www.webcitation.org/5rBiWD4P6?url=http://www.ecmascript.org/es4/spec/overview.pdf',
 'https://www.youtube.com/watch?v=XOmhtfTrRxc&amp;amp;feature=youtu.be&amp;amp;t=2m5s']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;得到页面关键字的相关类别&quot;&gt;得到页面关键字的相关类别&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['ISO标准化编程语言',
 'JavaScript',
 'Webarchive模板wayback链接',
 '使用过时图像语法的页面',
 '函数式编程语言',
 '包含BNE标识符的维基百科条目',
 '包含BNF标识符的维基百科条目',
 '包含GND标识符的维基百科条目',
 '包含LCCN标识符的维基百科条目',
 '包含SUDOC标识符的维基百科条目',
 '含有英語的條目',
 '有蓝链却未移除内部链接助手模板的页面',
 '美国发明',
 '脚本语言',
 '跨平台軟體']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;得到页面的摘要&quot;&gt;得到页面的摘要&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'JavaScript，通常缩写为JS，是一种高级的，解释执行的编程语言。JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。\n虽然JavaScript与Java这门语言不管是在名字上，或是在语法上都有很多相似性，但这两门编程语言从设计之初就有很大的不同，JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似（例如if条件语句、while循环、switch语句、do-while循环等）。\n在客户端，JavaScript在传统意义上被实现为一种解释语言，但在最近，它已经可以被即时编译（JIT）执行。随着最新的HTML5和CSS3语言标准的推行它还可用于游戏、桌面和移动应用程序的开发和在服务器端网络环境运行，如Node.js。'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="python" /><category term="wikipedia" /><summary type="html">设置代理和语言 #!/usr/local/bin/python3 # from sys import argv import wikipedia as wiki # from os import environ # import pprint # set proxy and change language environ[&quot;http_proxy&quot;] = &quot;http://127.0.0.1:1087&quot; environ[&quot;https_proxy&quot;] = &quot;https://127.0.0.1:1087&quot; wiki.set_lang(&quot;zh&quot;) wikipedia .search (提供搜索建议) wiki.search(&quot;指南车&quot;,15) # 第2个参数搜索建议数量，默认为10. ['指南车', '高堂隆', '指南针', '张衡', '北京市', '王振鐸', '维基导游', '记里鼓车', '湖北广播电视台', '上海市', '重庆市', '新加坡', '消防員', '俄罗斯', '印度'] wikipedia.summary (获得词条的概述) str=wiki.summary(&quot;象棋&quot;,100) #摘要 print(str) 象棋是中國大陸、台灣、越南、琉球地區所流行的傳統的2人對弈棋類遊戲。与国际象棋及围棋并列世界三大棋类之一。類似的有朝鮮將棋、日本將棋。中國大陸稱「Chess」為「国际象棋」，以此作為區別，又稱中國象棋，主要流行于全球華人、越南人及琉球人社區。是首屆世界智力運動會的正式比賽項目之一。 == 歷史 == === 詞義演變 === 象棋、象戲，在中文有多種含意：從古到今可指六博、彈棋、圍棋、雙陸、象徵的遊戲、中國象棋簡稱、各種象棋類遊戲。 象棋一詞最早出現在戰國，指象牙作的棋子，亦可指象徵猛禽獵魚之戲的六博。因六博棋子有其他材質，也有人認為象棋就是表示六博是象徵的遊戲。《楚辭·招魂》：「菎蔽象棋，有六博些。」王逸注：「以菎蔽作箸，象牙為棋。 wikipedia.page(“keyword”)(获得页面的对象) 有这个页面的类别、内容、链接、图片链接、摘要、参考 categories、content、links、imglink、summary、references、url page_obj = wiki.page(&quot;Javascript&quot;) page.content(得到页面内容) content_obj=page_obj.content print(content_obj) JavaScript，通常缩写为JS，是一种高级的，解释执行的编程语言。JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。 虽然JavaScript与Java这门语言不管是在名字上，或是在语法上都有很多相似性，但这两门编程语言从设计之初就有很大的不同，JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似（例如if条件语句、while循环、switch语句、do-while循环等）。 在客户端，JavaScript在传统意义上被实现为一种解释语言，但在最近，它已经可以被即时编译（JIT）执行。随着最新的HTML5和CSS3语言标准的推行它还可用于游戏、桌面和移动应用程序的开发和在服务器端网络环境运行，如Node.js。 == 历史 == === 肇始於網景 === 1993年，伊利諾大學厄巴納-香檳分校的國家超級電腦應用中心（NCSA）發表了NCSA Mosaic，這是最早流行的圖形介面網頁瀏覽器，它在全球資訊網的普及上發揮了重要作用。1994年，一家名為Mosaic Communications的公司在加州山景城成立了，並雇用了許多原來的NCSA Mosaic開發者用來開發Mosaic Netscape，該公司的目標是取代NCSA Mosaic成為世界第一的網頁瀏覽器。第一個版本的網頁瀏覽器Mosaic Netscape 0.9於1994年底發布。在四個月內，已經佔據了四分之三的瀏覽器市場，並成為1990年代網際網路的主要瀏覽器。為避免NCSA的商標所有權問題，該瀏覽器於同年更名為Netscape Navigator，該公司命名為Netscape Communications。網景預見到網路需要變得更動態。公司的創始人馬克·安德森認為HTML需要一種膠水語言，讓網頁設計師和兼職程式設計師可以很容易地使用它來組裝圖片和外掛程式之類的元件，且程式碼可以直接編寫在網頁標記中。 1995年，網景招募了布兰登·艾克，目標是把Scheme語言嵌入到Netscape Navigator瀏覽器當中。但更早之前，網景已經跟昇阳合作在Netscape Navigator中支援Java，這時網景內部產生激烈的爭論。後來網景決定發明一種與Java搭配使用的輔助腳本語言並且語法上有些類似，這個決策導致排除了採用現有的語言，例如Perl、Python、Tcl或Scheme。為了在其他競爭提案中捍衛JavaScript這個想法，公司需要有一個可以運作的原型。艾克在1995年5月僅花了十天時間就把原型設計出來了。 最初命名為Mocha，1995年9月在Netscape Navigator 2.0的Beta版中改名為LiveScript，同年12月，Netscape Navigator 2.0 Beta 3中部署時被重新命名為JavaScript，當時网景公司与昇阳电脑公司组成的开发联盟为了让这门语言搭上Java这个编程语言“热词”，因此将其临时改名为JavaScript，日后这成为大众对这门语言有诸多误解的原因之一。 === 微軟採用 === JavaScript推出后在浏览器上大获成功，微软公司在不久后就为Internet Explorer 3浏览器推出了JScript，以与处于市场领导地位的网景产品同台竞争。JScript也是一种JavaScript实现，这两个JavaScript语言版本在浏览器端共存意味着语言标准化的缺失，发展初期，JavaScript的标准并未确定，同期有网景的JavaScript，微软的JScript雙峰並峙。除此之外，微軟也在網頁技術上加入了不少專屬物件，使不少網頁使用非微軟平台及瀏覽器無法正常顯示，導致在瀏覽器大戰期間網頁設計者通常會把「用Netscape可達到最佳效果」或「用IE可達到最佳效果」的標誌放在首頁。隨著Internet Explorer 4的發布，微軟引入了動態HTML的概念，但語言實現和不同專有化的文件物件模型的差異仍然存在，成為網路上普及使用JavaScript的阻礙。 === 标准化 === 1996年11月，網景正式向ECMA（欧洲计算机制造商协会）提交語言標準。1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262。JavaScript成為了ECMAScript最著名的實現之一。除此之外，ActionScript和JScript也都是ECMAScript规范的实现语言。儘管JavaScript作為給非程式人員的腳本語言，而非作為給程式人員的程式語言來推廣和宣傳，但是JavaScript具有非常豐富的特性。 == 概論 == 一般来说，完整的JavaScript包括以下几个部分： ECMAScript，描述了该语言的语法和基本对象 文档对象模型（DOM），描述处理网页内容的方法和接口 浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口JavaScript的基本特点如下： 是一种解释性脚本语言（代码不进行预编译）。 主要用来向HTML页面添加交互行为。 可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。JavaScript常用来完成以下任务： 嵌入动态文本于HTML页面 对浏览器事件作出响应 读写HTML元素 在数据被提交到服务器之前验证数据 检测访客的浏览器信息 控制cookies，包括创建和修改等 == 特性 == 不同於伺服器端腳本語言，例如PHP与ASP，JavaScript主要被作为客户端腳本語言在用戶的瀏覽器上運行，不需要伺服器的支持。所以在早期程式設計師比較青睞於JavaScript以減少對伺服器的負擔，而與此同時也帶來另一個問題：安全性。而隨著伺服器的強壯，雖然現在的程序員更喜歡運行於伺服端的腳本以保證安全，但JavaScript仍然以其跨平台、容易上手等優勢大行其道。同时，有些特殊功能（如AJAX）必须依赖JavaScript在客户端进行支持。隨著引擎如V8和框架如Node.js的發展，及其事件驅動及異步IO等特性，JavaScript逐漸被用來編寫伺服器端程式。且在近几年中，Node.js的出世，让JavaScript也具有了一定的服务器功能，且在某些方面比PHP的效果更为显著。 === 指令式与结构化 === JavaScript从支持许多C语言的结构化编程语法（例如if条件语句、while循环、switch语句、do-while循环等）。但作用域是一个例外：JavaScript只支持使用var关键字来定义变量的函数作用域。ECMAScript加入了let关键字来支持块级作用域，意味着JavaScript现在既支持函数作用域又支持块级作用域。正如C语言一样，JavaScript中的表达式和语句是不同的。与C不同，JavaScript支持自动在语句末添加分号。 === 动态化 === 正如大部分脚本语言，类型与值而不是与变量关联。例如x变量可以为数值，随后又可被赋值为字符串。JavaScript提供了包括鸭子类型在内的方法来检测变量类型。 ==== Eval() ==== Eval() 函數可以直接執行一個JavaScript函式。例如： == 编程 == JavaScript是一種腳本語言，其原始碼在發往客户端執行之前不需經過編譯，而是將文本格式的字符代碼發送給瀏覽器由瀏覽器解釋執行。直譯語言的弱點是安全性較差，而且在JavaScript中，如果一條執行不了，那麼下面的語言也無法執行。而其解決辦法就是於使用异常处理try{}catch(){}︰ JavaScript被歸類為直譯語言，因為目前主流的引擎都是每次執行時載入程式碼並解譯。V8是將所有程式碼解譯後再開始執行，其他引擎則是逐行解譯（SpiderMonkey會將解譯過的指令暫存，以提高效能，稱為即時編譯），但由於V8的核心部份多數用JavaScript撰寫（而SpiderMonkey是用C++），因此在不同的測試上，兩者效能互有優劣。 與其相對應的是編譯語言，例如C语言，以編譯語言編寫的程式在執行之前，必須經過編譯，將程式碼編譯為機器碼，再加以執行。 == 範例 == 以下是一個簡單的JavaScript Hello World︰ 或是在瀏覽器的地址栏中使用javascript:，以互動方式表示： == 版本 == JavaScript最初開發於1996年，被使用於Netscape Navigator網頁瀏覽器。同年微軟在Internet Explorer發布了一個實作。由於商標問題，這項實作被命名為JScript。1997年，JavaScript已經被網景公司提交給ECMA制定為標準，稱之為ECMAScript，標準編號ECMA-262。目前最新版為ECMA-262 5th Edition。目前ECMA-262 4th Edition正在開發的過程中，與其對應的JavaScript的版本為JavaScript 2.0，目前也正在開發過程中。 下列表格的資訊基於多個參考來源： == 參見 == 腳本語言 DMDScript ECMAScript JavaScript引擎 JScript AJAX JavaScript函式庫 == 參考文獻 == == 外部連結 == 關於JavaScript介紹 Mozilla Developer Network上的資源 page.url(得到页面地址) page_obj.url 'https://zh.wikipedia.org/wiki/JavaScript' page.images(得到页面图片链接) page_obj.images ['https://upload.wikimedia.org/wikipedia/commons/c/cc/8bit-dynamiclist_%28reversed%29.gif', 'https://upload.wikimedia.org/wikipedia/commons/f/fb/Confusion_grey.svg', 'https://upload.wikimedia.org/wikipedia/commons/3/34/Javascript_icon.svg', 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Node.js_logo.svg', 'https://upload.wikimedia.org/wikipedia/commons/d/db/Symbol_list_class.svg', 'https://upload.wikimedia.org/wikipedia/commons/d/df/Wikibooks-logo-en-noslogan.svg', 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Wikibooks-logo.svg', 'https://upload.wikimedia.org/wikipedia/commons/c/cd/Zh_conversion_icon_m.svg'] page_obj.references ['http://dx.doi.org/10.1109%2FMC.2012.57', 'http://archive.oreilly.com/pub/a/javascript/2001/04/06/js_history.html', 'http://catalogo.bne.es/uhtbin/authoritybrowse.cgi?action=display&amp;amp;authority_id=XX542465', 'http://catalogue.bnf.fr/ark:/12148/cb12549978q', 'http://data.bnf.fr/ark:/12148/cb12549978q', 'http://developer.apple.com/mac/library/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html', 'http://ejohn.org/blog/versions-of-javascript', 'http://id.loc.gov/authorities/subjects/sh96004880', 'http://javascript.about.com/library/bljver.htm', 'http://msdn.microsoft.com/library/default.asp?url=/library/en-us/script56/html/js56jsoriversioninformation.asp', 'http://news.microsoft.com/1996/05/29/microsoft-internet-explorer-3-0-beta-now-available/', 'http://speakingjs.com/es5/ch04.html', 'http://wp.netscape.com/comprod/columns/techvision/innovators_be.html', 'http://www.apps.ietf.org/rfc/rfc4329.html#sec-7.1', 'http://www.computer.org/csdl/mags/co/2012/02/mco2012020007-abs.html', 'http://www.crockford.com/javascript/javascript.html', 'http://www.ecma-international.org/publications/standards/Ecma-262.htm', 'http://www.ecmascript.org/es4/spec/overview.pdf', 'http://www.technologizer.com/2010/09/16/the-unwelcome-return-of-best-viewed-with-internet-explorer/', 'http://www.webmasterworld.com/forum91/68.htm', 'https://d-nb.info/gnd/4420180-1', 'https://developer.mozilla.org/docs/Web/JavaScript', 'https://developer.mozilla.org/en-US/docs/JavaScript/New_in_JavaScript/1.7?redirectlocale=en-US&amp;amp;redirectslug=New_in_JavaScript_1.7#Generators', 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript', 'https://developer.mozilla.org/en-US/docs/Web/JavaScript', 'https://developer.mozilla.org/en/JavaScript/Language_Resources', 'https://web.archive.org/web/20070916144913/http://wp.netscape.com/newsref/pr/newsrelease67.html', 'https://web.archive.org/web/20080208124612/http://wp.netscape.com/comprod/columns/techvision/innovators_be.html', 'https://web.archive.org/web/20140316122853/http://www.apps.ietf.org/rfc/rfc4329.html', 'https://web.archive.org/web/20160719020828/http://archive.oreilly.com/pub/a/javascript/2001/04/06/js_history.html', 'https://www.idref.fr/034781870', 'https://www.webcitation.org/5rBiWD4P6?url=http://www.ecmascript.org/es4/spec/overview.pdf', 'https://www.youtube.com/watch?v=XOmhtfTrRxc&amp;amp;feature=youtu.be&amp;amp;t=2m5s'] 得到页面关键字的相关类别 page_obj.categories ['ISO标准化编程语言', 'JavaScript', 'Webarchive模板wayback链接', '使用过时图像语法的页面', '函数式编程语言', '包含BNE标识符的维基百科条目', '包含BNF标识符的维基百科条目', '包含GND标识符的维基百科条目', '包含LCCN标识符的维基百科条目', '包含SUDOC标识符的维基百科条目', '含有英語的條目', '有蓝链却未移除内部链接助手模板的页面', '美国发明', '脚本语言', '跨平台軟體'] 得到页面的摘要 page_obj.summary 'JavaScript，通常缩写为JS，是一种高级的，解释执行的编程语言。JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。\n虽然JavaScript与Java这门语言不管是在名字上，或是在语法上都有很多相似性，但这两门编程语言从设计之初就有很大的不同，JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似（例如if条件语句、while循环、switch语句、do-while循环等）。\n在客户端，JavaScript在传统意义上被实现为一种解释语言，但在最近，它已经可以被即时编译（JIT）执行。随着最新的HTML5和CSS3语言标准的推行它还可用于游戏、桌面和移动应用程序的开发和在服务器端网络环境运行，如Node.js。'</summary></entry><entry><title type="html">各种形式的平均数</title><link href="https://dygck.github.io/mean" rel="alternate" type="text/html" title="各种形式的平均数" /><published>2018-10-08T11:57:30+08:00</published><updated>2018-10-08T11:57:30+08:00</updated><id>https://dygck.github.io/mean</id><content type="html" xml:base="https://dygck.github.io/mean">&lt;p&gt;关于各种平均数的描述!&lt;/p&gt;

&lt;h2 id=&quot;简单平均数mean&quot;&gt;简单平均数(mean)&lt;/h2&gt;
&lt;p&gt;求和除个数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;公式&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\bar{x}=\frac{1}{n}\sum\limits_{i=1}^n x_i&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;例子&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;省略&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;函数&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-Matlab&quot;&gt;mean()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;截尾平均数trimmed-mean&quot;&gt;截尾平均数(trimmed mean)&lt;/h2&gt;
&lt;p&gt;将一组数据中部分异常值去点之后计算平均数通常是根据百分比来去除。&lt;/p&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;trimmean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;precent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;flag作用是当出现截取百分比的个数不是整数的时候，使用的方法。
有&lt;code class=&quot;highlighter-rouge&quot;&gt;round&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;floor&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;weighted&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;几何平均数geometric-mean&quot;&gt;几何平均数(geometric mean)&lt;/h2&gt;
&lt;p&gt;通常是增长率之内的求平均数的方法&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;公式&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\bar{G}=\sqrt[n]{\prod\limits_{i=1}^{n}} x_i=\sqrt[n]{x_1 \cdot x_2 \cdots x_n }&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;例子&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;假设某超市四年销售增长率分别为,10%,20%,15%,25%,则年平均增长率应该使用几何平均数计算:
	&lt;script type=&quot;math/tex&quot;&gt;\bar{G}=\sqrt[4]{(1+10\%)(1+20\%)(1+15\%)(1+25\%)}-1=17.37\%&lt;/script&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;函数&lt;/p&gt;

    &lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;geomean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;调和平均数harmonic-mean&quot;&gt;调和平均数(harmonic mean)&lt;/h2&gt;
&lt;p&gt;调和平均数某种程度上是处理分子相同，分母不同的平均数问题。
如平均速度问题(求速度问题，转化为了路程与时间的分数)。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;公式&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\bar{H}=\frac{n}{\sum\limits_{i=1}^n \frac{1}{x_i}}=\frac{n}{\frac{1}{x_1}+\frac{2}{x_1}+\dots+\frac{n}{x_i}}&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;例子&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;假设一辆车,行驶了一段距离速度为50km/h，按原路返回速度为60km/h，求平均速度：
&lt;script type=&quot;math/tex&quot;&gt;\bar{H}=\frac{2}{\frac{1}{50}+\frac{1}{60}}=54.54km/h&lt;/script&gt;
可以看出来平均速度受低的值影响较大，调和平均数受低值影响大。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;函数&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-Matlab&quot;&gt;harmmean()
&lt;/code&gt;&lt;/pre&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="statistics" /><category term="matlab" /><summary type="html">关于各种平均数的描述! 简单平均数(mean) 求和除个数 公式 例子 省略 函数 mean() 截尾平均数(trimmed mean) 将一组数据中部分异常值去点之后计算平均数通常是根据百分比来去除。 trimmean(data,precent,flag) flag作用是当出现截取百分比的个数不是整数的时候，使用的方法。 有round,floor,weighted. 几何平均数(geometric mean) 通常是增长率之内的求平均数的方法 公式 例子 假设某超市四年销售增长率分别为,10%,20%,15%,25%,则年平均增长率应该使用几何平均数计算: 函数 geomean() 调和平均数(harmonic mean) 调和平均数某种程度上是处理分子相同，分母不同的平均数问题。 如平均速度问题(求速度问题，转化为了路程与时间的分数)。 公式 例子 假设一辆车,行驶了一段距离速度为50km/h，按原路返回速度为60km/h，求平均速度： 可以看出来平均速度受低的值影响较大，调和平均数受低值影响大。 函数 harmmean()</summary></entry><entry><title type="html">魔法函数测试</title><link href="https://dygck.github.io/magicline" rel="alternate" type="text/html" title="魔法函数测试" /><published>2018-10-07T23:59:58+08:00</published><updated>2018-10-07T23:59:58+08:00</updated><id>https://dygck.github.io/magicline</id><content type="html" xml:base="https://dygck.github.io/magicline">&lt;h2 id=&quot;单元格魔法统计代码执行时间&quot;&gt;单元格魔法，统计代码执行时间！&lt;/h2&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%%time&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;short&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;disp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      500500

Time: 0.014966011047363281 seconds.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;列出可用魔法&quot;&gt;列出可用魔法&lt;/h2&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%lsmagic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Available line magics:
%activity  %cd  %connect_info  %conversation  %dot  %download  %edit  %get  %help  %html  %include  %install  %install_magic  %javascript  %jigsaw  %kernel  %kx  %latex  %load  %ls  %lsmagic  %macro  %magic  %matplotlib  %parallel  %plot  %pmap  %px  %python  %reload_magics  %restart  %run  %scheme  %set  %shell

Available cell magics:
%%activity  %%brain  %%conversation  %%debug  %%dot  %%file  %%help  %%html  %%javascript  %%kx  %%latex  %%macro  %%pipe  %%processing  %%px  %%python  %%scheme  %%shell  %%show  %%time  %%tutor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;执行shell脚本&quot;&gt;执行shell脚本。&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;单行shell脚本 （%shell or !）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%shell pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/fujie/Desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/fujie/Desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;单元shell脚本 (%%shell or !!)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%%shell&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;diff&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;56a57
&amp;gt; pip
85a87
&amp;gt; setuptools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;执行javascript&quot;&gt;执行javascript&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;javascript&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;IPython.core.display.Javascript object&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;运行python&quot;&gt;运行python&lt;/h2&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%%python&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;posix.uname_result(sysname='Darwin', nodename='Mac.local', release='18.0.0', version='Darwin Kernel Version 18.0.0: Wed Aug 22 20:13:40 PDT 2018; root:xnu-4903.201.2~1/RELEASE_X86_64', machine='x86_64')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;下载文件&quot;&gt;下载文件&lt;/h2&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%download  &quot;https://dygck.github.io/assets/images/sublime_keybind.gif&quot;  -f  ~/Desktop/a.gif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[0;31m&amp;lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:841)&amp;gt;
[0m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;编辑文件&quot;&gt;编辑文件&lt;/h2&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%edit pip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%%file pip&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;appnope&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;asn1crypto&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;astroid&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Automat&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;autopep8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;backcall&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;beautifulsoup4&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bleach&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bs4&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;certifi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cffi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;chardet&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;constantly&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cryptography&lt;/span&gt;





&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Created file '/Users/fujie/Desktop/pip'.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用html&quot;&gt;使用html&lt;/h2&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;%html  &amp;lt;p style=&quot;color:#121276&quot;&amp;gt;This is underlined!&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p style=&quot;color:#121276&quot;&gt;This is underlined!&lt;/p&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="python" /><category term="matlab" /><category term="shell" /><category term="javascript" /><category term="jupyter" /><summary type="html">单元格魔法，统计代码执行时间！ %%time format short s=0; for i=1:1000 s=s+i; end disp(s) 500500 Time: 0.014966011047363281 seconds. 列出可用魔法 %lsmagic Available line magics: %activity %cd %connect_info %conversation %dot %download %edit %get %help %html %include %install %install_magic %javascript %jigsaw %kernel %kx %latex %load %ls %lsmagic %macro %magic %matplotlib %parallel %plot %pmap %px %python %reload_magics %restart %run %scheme %set %shell Available cell magics: %%activity %%brain %%conversation %%debug %%dot %%file %%help %%html %%javascript %%kx %%latex %%macro %%pipe %%processing %%px %%python %%scheme %%shell %%show %%time %%tutor 执行shell脚本。 单行shell脚本 （%shell or !） %shell pwd /Users/fujie/Desktop !pwd /Users/fujie/Desktop 单元shell脚本 (%%shell or !!) %%shell diff req pip 56a57 &amp;gt; pip 85a87 &amp;gt; setuptools 执行javascript %%javascript var a=[1,2,3] alert(a.length) &amp;lt;IPython.core.display.Javascript object&amp;gt; 运行python %%python import os print(os.uname()) posix.uname_result(sysname='Darwin', nodename='Mac.local', release='18.0.0', version='Darwin Kernel Version 18.0.0: Wed Aug 22 20:13:40 PDT 2018; root:xnu-4903.201.2~1/RELEASE_X86_64', machine='x86_64') 下载文件 %download &quot;https://dygck.github.io/assets/images/sublime_keybind.gif&quot; -f ~/Desktop/a.gif [0;31m&amp;lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:841)&amp;gt; [0m 编辑文件 %edit pip %%file pip appnope asn1crypto astroid attrs Automat autopep8 backcall beautifulsoup4 bleach bs4 certifi cffi chardet constantly cryptography Created file '/Users/fujie/Desktop/pip'. 使用html %html &amp;lt;p style=&quot;color:#121276&quot;&amp;gt;This is underlined!&amp;lt;/p&amp;gt; This is underlined!</summary></entry><entry><title type="html">Line Magics</title><link href="https://dygck.github.io/magic-reference" rel="alternate" type="text/html" title="Line Magics" /><published>2018-10-07T12:59:56+08:00</published><updated>2018-10-07T12:59:56+08:00</updated><id>https://dygck.github.io/magic-reference</id><content type="html" xml:base="https://dygck.github.io/magic-reference">&lt;h2 id=&quot;activity&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%activity&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%activity FILENAME - run a widget-based activity
  (poll, classroom response, clicker-like activity)&lt;/p&gt;

&lt;p&gt;This magic will load the JSON in the filename.&lt;/p&gt;

&lt;p&gt;Examples:
    %activity /home/teacher/activity1
    %activity /home/teacher/activity1 new
    %activity /home/teacher/activity1 edit&lt;/p&gt;

&lt;h2 id=&quot;cd&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%cd&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%cd PATH - change current directory of session&lt;/p&gt;

&lt;p&gt;This line magic is used to change the directory of the
notebook or console.&lt;/p&gt;

&lt;p&gt;Note that this is not the same directory as used by
the %shell magics.&lt;/p&gt;

&lt;p&gt;Example:
    %cd ..&lt;/p&gt;

&lt;h2 id=&quot;connect_info&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%connect_info&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%connect_info - show connection information&lt;/p&gt;

&lt;p&gt;This line magic will show the connection information for this
language kernel instance. This information is only necessary
if you are interested in making additional connections to the
running kernel.&lt;/p&gt;

&lt;p&gt;Example:
    %connect_info&lt;/p&gt;

&lt;p&gt;Paste the given JSON into a file, and connect with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; ipython &amp;lt;app&amp;gt; --existing &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or, if you are local, you can connect with just:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; ipython &amp;lt;app&amp;gt; --existing %(key)s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or even just:
    $&amp;gt; ipython &lt;app&gt; --existing&lt;/app&gt;&lt;/p&gt;

&lt;p&gt;if this is the most recent Jupyter session you have started.&lt;/p&gt;

&lt;h2 id=&quot;conversation&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%conversation&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%conversation ID - insert conversation by ID
%%conversation ID - insert conversation by ID&lt;/p&gt;

&lt;h2 id=&quot;dot&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%dot&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%dot CODE - render code as Graphviz image&lt;/p&gt;

&lt;p&gt;This line magic will render the Graphiz CODE, and render
it as an image.&lt;/p&gt;

&lt;p&gt;Example:
    %dot graph A { a-&amp;gt;b };&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%download&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%download URL [-f FILENAME] - download file from URL&lt;/p&gt;

&lt;p&gt;This line magic will download and save a file. By
default it will use the same filename as the URL.
You can give it another name using -f.&lt;/p&gt;

&lt;p&gt;Examples:
    %%download http://some/file/from/internet.txt -f myfile.txt
    %%download http://some/file/from/program.ss&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-f –filename  use the provided name as filename [default: None]&lt;/p&gt;

&lt;h2 id=&quot;edit&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%edit&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%edit FILENAME - load code from filename into next cell for editing&lt;/p&gt;

&lt;p&gt;This line magic will open the file in the next cell, and allow
you edit it.&lt;/p&gt;

&lt;p&gt;This is a shortcut for %load, and appending a “%%file” as first line.&lt;/p&gt;

&lt;p&gt;Example:
    %edit myprogram.ss&lt;/p&gt;

&lt;h2 id=&quot;get&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%get&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%get VARIABLE - get a variable from the kernel in a Python-type.&lt;/p&gt;

&lt;p&gt;This line magic is used to get a variable.&lt;/p&gt;

&lt;p&gt;Examples:
    %get x&lt;/p&gt;

&lt;h2 id=&quot;help&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%help&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;This is MetaKernel Python. It implements a Python interpreter.&lt;/p&gt;

&lt;h2 id=&quot;html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%html&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%html CODE - display code as HTML&lt;/p&gt;

&lt;p&gt;This line magic will send the CODE to the browser as
HTML.&lt;/p&gt;

&lt;p&gt;Example:
    %html &lt;u&gt;This is underlined!&lt;/u&gt;&lt;/p&gt;

&lt;h2 id=&quot;include&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%include&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%include FILENAME … - include code from filename into this code&lt;/p&gt;

&lt;p&gt;This line magic will get the contents of a file and include it
in this cell evaluation.&lt;/p&gt;

&lt;p&gt;You can have multiple %include’s at the beginning of a cell,
and they will be included in order.&lt;/p&gt;

&lt;p&gt;Examples:
    %include myprog.py
    %include myprog1.py myprog2.py&lt;/p&gt;

&lt;h2 id=&quot;install&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%install&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%install PACKAGE - install package&lt;/p&gt;

&lt;p&gt;Example:
    %install calico-spell-check&lt;/p&gt;

&lt;h2 id=&quot;install_magic&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%install_magic&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%install_magic URL - download and install magic from URL&lt;/p&gt;

&lt;p&gt;This line magic will copy the file at the URL into your
personal magic folder.&lt;/p&gt;

&lt;p&gt;Example:
    %install_magic http://path/to/some/magic.py&lt;/p&gt;

&lt;h2 id=&quot;javascript&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%javascript&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%javascript CODE - send code as JavaScript&lt;/p&gt;

&lt;p&gt;This line magic will execute the CODE on the line as
JavaScript in the browser.&lt;/p&gt;

&lt;p&gt;Example:
    %javascript console.log(“Print in the browser console”)&lt;/p&gt;

&lt;h2 id=&quot;jigsaw&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%jigsaw&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%jigsaw LANGUAGE - show visual code editor/generator&lt;/p&gt;

&lt;p&gt;This line magic will allow visual code editing or generation.&lt;/p&gt;

&lt;p&gt;Examples:
    %jigsaw Processing
    %jigsaw Python
    %jigsaw Processing –workspace workspace1&lt;/p&gt;

&lt;h2 id=&quot;options-1&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-w –workspace use the provided name as workspace filename [default: None]&lt;/p&gt;

&lt;h2 id=&quot;kernel&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%kernel&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%kernel MODULE CLASS [-k NAME] - construct a kernel for sending code.&lt;/p&gt;

&lt;p&gt;This line magic will contruct a kernel language so that you can
communicate.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%kernel bash_kernel BashKernel -k bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;%kx&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;%%kx&lt;/code&gt; to send code to the kernel.&lt;/p&gt;

&lt;p&gt;Also returns the kernel as output.&lt;/p&gt;

&lt;h2 id=&quot;options-2&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-k –kernel_name kernel name given to use for execution [default: default]&lt;/p&gt;

&lt;h2 id=&quot;kx&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%kx&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%kx CODE [-k NAME] - send the code to the kernel.&lt;/p&gt;

&lt;p&gt;This line magic will send the CODE to the kernel
for execution.&lt;/p&gt;

&lt;p&gt;Returns the result of the execution as output.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%kernel ls -al
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;%kernel MODULE CLASS [-k NAME]&lt;/code&gt; to create a kernel.&lt;/p&gt;

&lt;h2 id=&quot;options-3&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-k –kernel_name kernel name given to use for execution [default: None]&lt;/p&gt;

&lt;h2 id=&quot;latex&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%latex&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%latex TEXT - display text as LaTeX&lt;/p&gt;

&lt;p&gt;This line magic will display the TEXT on the line as LaTeX.&lt;/p&gt;

&lt;p&gt;Example:
    %latex x_1 = \dfrac{a}{b}&lt;/p&gt;

&lt;h2 id=&quot;load&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%load&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%load FILENAME - load code from filename into next cell&lt;/p&gt;

&lt;p&gt;This line magic will get the contents of a file and load it
into the next cell.&lt;/p&gt;

&lt;p&gt;Example:
    %load myprog.py&lt;/p&gt;

&lt;h2 id=&quot;ls&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%ls&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%ls PATH - list files and directories under PATH&lt;/p&gt;

&lt;p&gt;This line magic is used to list the directory contents.&lt;/p&gt;

&lt;p&gt;Examples:
    %ls .
    %ls ..&lt;/p&gt;

&lt;h2 id=&quot;options-4&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-r –recursive recursively descend into subdirectories [default: False]&lt;/p&gt;

&lt;h2 id=&quot;lsmagic&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%lsmagic&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%lsmagic - list the current line and cell magics&lt;/p&gt;

&lt;p&gt;This line magic will list all of the available cell and line
magics installed in the system and in your personal magic
folder.&lt;/p&gt;

&lt;p&gt;Example:
    %lsmagic&lt;/p&gt;

&lt;h2 id=&quot;macro&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%macro&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%macro NAME - execute a macro
%macro -l [all|learned|system] - list macros
%macro [-s] [-d] NAME - show or delete a macro&lt;/p&gt;

&lt;p&gt;This line macro will execute, show, list, or delete the
named macro.&lt;/p&gt;

&lt;p&gt;Examples:
    %macro renumber-cells&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%macro test
print &quot;Ok!&quot;

%macro -l all

%macro -d test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;options-5&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-s –show      show macro [default: False]
-l –list      list macros [default: False]
-d –delete    delete a named macro [default: False]&lt;/p&gt;

&lt;h2 id=&quot;magic&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%magic&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%magic - show installed magics&lt;/p&gt;

&lt;p&gt;This line magic shows all of the install magics, either from
the system magic folder, or your own private magic folder.&lt;/p&gt;

&lt;h2 id=&quot;matplotlib&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%matplotlib&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%matplotlib BACKEND - set the matplotlib backend to BACKEND&lt;/p&gt;

&lt;p&gt;This line magic will set (and reload) the items associated
with the matplotlib backend.&lt;/p&gt;

&lt;p&gt;Also, monkeypatches the IPython.display.display
to work with metakernel-based kernels.&lt;/p&gt;

&lt;p&gt;Example:
    %matplotlib notebook&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import matplotlib.pyplot as plt
plt.plot([3, 8, 2, 5, 1])
plt.show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;parallel&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%parallel&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%parallel MODULE CLASS [-k NAME] [-i […]] - construct an interface to the cluster.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%parallel bash_kernel BashKernel
%parallel bash_kernel BashKernel -k bash
%parallel bash_kernel BashKernel --i [0,2:5,9,...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cluster_size and cluster_rank variables are set upon
initialization of the remote node (if the kernel
supports %set).&lt;/p&gt;

&lt;p&gt;Use %px or %%px to send code to the cluster.&lt;/p&gt;

&lt;h2 id=&quot;options-6&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-i –ids       the machine ids to use from the cluster [default: None]
-k –kernel_name arbitrary name given to reference kernel [default: default]&lt;/p&gt;

&lt;h2 id=&quot;plot&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%plot&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%plot [options] backend - configure plotting for the session.&lt;/p&gt;

&lt;p&gt;This line magic will configure the plot settings for this
language.&lt;/p&gt;

&lt;p&gt;Examples:
    %plot qt –format=png
    %plot inline -w 640&lt;/p&gt;

&lt;p&gt;Note: not all languages may support the %plot magic, and not all
options may be supported.&lt;/p&gt;

&lt;h2 id=&quot;options-7&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-h –height    Plot height in pixels
-w –width     Plot width in pixels
-r –resolution Resolution in pixels per inch
-b –backend   Backend selection [default: inline]
-f –format    Plot format (png, svg or jpg).
-s –size      Pixel size of plots, “width,height”&lt;/p&gt;

&lt;h2 id=&quot;pmap&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%pmap&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%pmap FUNCTION [ARGS1,ARGS2,…] - (“parallel map”) call a FUNCTION on args&lt;/p&gt;

&lt;p&gt;This line magic will apply a function name to all of the
arguments given one at a time using a dynamic load balancing scheduler.&lt;/p&gt;

&lt;p&gt;Currently, the args are provided as a Python expression (with no spaces).&lt;/p&gt;

&lt;p&gt;You must first setup a cluster using the %parallel magic.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%pmap function-name-in-language range(10)
%pmap function-name-in-language [1,2,3,4]
%pmap run_experiment range(1,100,5)
%pmap run_experiment [&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;]
%pmap f [(1,4,7),(2,3,5),(7,2,2)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The function name must be a function that is available on all
nodes in the cluster. For example, you could:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%px
(define myfunc
   (lambda (n)
     (+ n 1)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to define myfunc on all machines (use %%px -e to also define
it in the running notebook or console). Then you can apply it
to a list of arguments:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%pmap myfunc range(100)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The load balancer will run myfunc on the next available node
in the cluster.&lt;/p&gt;

&lt;p&gt;Note: not all languages may support running a function via this magic.&lt;/p&gt;

&lt;h2 id=&quot;px&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%px&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%px EXPRESSION - send EXPRESSION to the cluster.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%px sys.version
%px -k scheme (define x 42)
%px x
%px cluster_rank
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cluster_size and cluster_rank variables are set upon
initialization of the remote node (if the kernel
supports %set).&lt;/p&gt;

&lt;p&gt;Use %parallel to initialize the cluster.&lt;/p&gt;

&lt;h2 id=&quot;options-8&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-e –evaluate  evaluate code in the current kernel, too. The current kernel should be of the same language as the cluster. [default: False]
-k –kernel_name kernel name given to use for execution [default: None]&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%python&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%python CODE - evaluate code as Python&lt;/p&gt;

&lt;p&gt;This line magic will evaluate the CODE (either expression or
statement) as Python code.&lt;/p&gt;

&lt;p&gt;Note that the version of Python is that of the notebook server.&lt;/p&gt;

&lt;p&gt;Examples:
    %python x = 42
    %python import math
    %python x + math.pi&lt;/p&gt;

&lt;h2 id=&quot;reload_magics&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%reload_magics&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%reload_magics - reload the magics from the installed files&lt;/p&gt;

&lt;p&gt;Example:
    %reload_magics&lt;/p&gt;

&lt;p&gt;This line magic will reload the magics installed in the
system, and in your private magic folder.&lt;/p&gt;

&lt;p&gt;You only need to do this if you edit a magic file. It runs
automatically if you install a new magic.&lt;/p&gt;

&lt;h2 id=&quot;restart&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%restart&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%restart - restart session&lt;/p&gt;

&lt;p&gt;This line magic will restart the connection to the language
kernel.&lt;/p&gt;

&lt;p&gt;Example:
    %restart&lt;/p&gt;

&lt;p&gt;Note that you will lose all computed values.&lt;/p&gt;

&lt;h2 id=&quot;run&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%run&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%run [–language LANG] FILENAME - run code in filename by
   kernel&lt;/p&gt;

&lt;p&gt;This magic will take the code in FILENAME and run it. The
exact details of how the code runs are deterimined by your
language.&lt;/p&gt;

&lt;p&gt;The –language LANG option will prefix the file contents with
“%%LANG”. You may also put information in the cell which will
appear before the contents of the file.&lt;/p&gt;

&lt;p&gt;Examples:
    %run filename.ss
    %run -l python filename.py&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%kx calysto_scheme.kernel CalystoScheme
%run --language kx filename.ss
%run --language &quot;kx default&quot; filename.ss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: not all languages may support %run.&lt;/p&gt;

&lt;h2 id=&quot;options-9&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-l –language  use the provided language name as kernel [default: None]&lt;/p&gt;

&lt;h2 id=&quot;scheme&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%scheme&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%scheme CODE - evaluate code as Scheme&lt;/p&gt;

&lt;p&gt;This line magic will evaluate the CODE (either expression or
statement) as Scheme code.&lt;/p&gt;

&lt;p&gt;Examples:
    %scheme (define x 42)
    %scheme (import “math”)
    %scheme (+ x + math.pi)&lt;/p&gt;

&lt;h2 id=&quot;set&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%set&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%set VARIABLE VALUE - set a variable in the kernel.&lt;/p&gt;

&lt;p&gt;This line magic is used to set a variable to a Python value.&lt;/p&gt;

&lt;p&gt;Examples:
    %set x 42
    %set x [1, 2, 3]&lt;/p&gt;

&lt;h2 id=&quot;shell&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%shell&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%shell COMMAND - run the line as a shell command&lt;/p&gt;

&lt;p&gt;This line command will run the COMMAND in the bash shell.&lt;/p&gt;

&lt;p&gt;Examples:
    %shell ls -al
    %shell cd&lt;/p&gt;

&lt;p&gt;Note: this is a persistent connection to a shell.
 The working directory is synchronized to that of the notebook
 before and after each call.&lt;/p&gt;

&lt;p&gt;You can also use “!” instead of “%shell”.&lt;/p&gt;

&lt;h1 id=&quot;cell-magics&quot;&gt;Cell Magics&lt;/h1&gt;

&lt;h2 id=&quot;activity-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%activity&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%activity FILENAME - make an activity from
  a JSON structure&lt;/p&gt;

&lt;p&gt;This magic will construct a Python file from the cell’s
content, a JSON structure.&lt;/p&gt;

&lt;p&gt;Example:
    %%activity /home/teacher/activity1
    {“activity”: “poll”,
     “instructors”: [“teacher01”],
     “results_file”: “/home/teacher/activity1.results”,
     “items”: [{“id”: “…”,
                “type”: “multiple choice”,
                “question”: “…”,
                “options”: [“…”, …]
               }, …]
    }&lt;/p&gt;

&lt;p&gt;In this example, users will load
/home/teacher/activity1&lt;/p&gt;

&lt;h2 id=&quot;brain&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%brain&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%brain - run a cell as brain control code
for a calysto.simulation.&lt;/p&gt;

&lt;p&gt;Requires calysto.&lt;/p&gt;

&lt;p&gt;Examples:
   %%brain
   robot.forward(1)&lt;/p&gt;

&lt;h2 id=&quot;conversation-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%conversation&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%conversation ID - insert conversation by ID
%%conversation ID - insert conversation by ID&lt;/p&gt;

&lt;h2 id=&quot;debug&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%debug&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%debug - step through the code expression by expression&lt;/p&gt;

&lt;p&gt;This cell magic will step through the code in the cell,
if the kernel supports debugging.&lt;/p&gt;

&lt;p&gt;Example:
    %%debug&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(define x 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dot-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%dot&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%dot - render contents of cell as Graphviz image&lt;/p&gt;

&lt;p&gt;This cell magic will send the cell to the browser as
HTML.&lt;/p&gt;

&lt;p&gt;Example:
    %%dot&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;graph A { a-&amp;gt;b };
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;file&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%file&lt;/code&gt;&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;%%file [–append&lt;/td&gt;
      &lt;td&gt;-a] FILENAME - write contents of cell to file&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This cell magic will create or append the cell contents into/onto
a file.&lt;/p&gt;

&lt;p&gt;Example:
    %%file -a log.txt
    This will append this line onto the file “log.txt”&lt;/p&gt;

&lt;h2 id=&quot;options-10&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-a –append    append onto an existing file [default: False]&lt;/p&gt;

&lt;h2 id=&quot;help-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%help&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;This is MetaKernel Python. It implements a Python interpreter.&lt;/p&gt;

&lt;h2 id=&quot;html-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%html&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%html - display contents of cell as HTML&lt;/p&gt;

&lt;p&gt;This cell magic will send the cell to the browser as
HTML.&lt;/p&gt;

&lt;p&gt;Example:
    %%html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&quot;...&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div&amp;gt;Contents of div tag&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;javascript-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%javascript&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%javascript - send contents of cell as JavaScript&lt;/p&gt;

&lt;p&gt;This cell magic will execute the contents of the cell as
JavaScript in the browser.&lt;/p&gt;

&lt;p&gt;Example:
    %%javascript&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;element.html(&quot;Hello this is &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;!&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;kx-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%kx&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%kx [-k NAME] - send the cell code to the kernel.&lt;/p&gt;

&lt;p&gt;This cell magic will send the cell to be evaluated by
the kernel. The kernel must have been created use the
%%kernel magic.&lt;/p&gt;

&lt;p&gt;Returns the result of the execution as output.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%kernel bash
ls -al
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;%kernel MODULE CLASS [-k NAME]&lt;/code&gt; to create a kernel.&lt;/p&gt;

&lt;h2 id=&quot;options-11&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-k –kernel_name kernel name given to use for execution [default: None]&lt;/p&gt;

&lt;h2 id=&quot;latex-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%latex&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%latex - display contents of cell as LaTeX&lt;/p&gt;

&lt;p&gt;This cell magic will display the TEXT in the cell as LaTeX.&lt;/p&gt;

&lt;p&gt;Example:
    %%latex
    x_1 = \dfrac{a}{b}&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x_2 = a^{n - 1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;macro-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%macro&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%macro NAME - learn a new macro&lt;/p&gt;

&lt;p&gt;This cell macro will learn the macro in the
cell. The cell contents are just commands (macros
or code in the kernel language).&lt;/p&gt;

&lt;p&gt;Example:
    %%macro test
    print “Ok!”&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%macro test
Ok!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pipe&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%pipe&lt;/code&gt;&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;%%pipe FUNCTION1&lt;/td&gt;
      &lt;td&gt;FUNCTION2 …&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The pipe cell will “pipe” the contents of a cell
through a series of function calls. All of the
functions must be defined in the language, and
the kernel must support the &lt;code class=&quot;highlighter-rouge&quot;&gt;do_function_direct&lt;/code&gt;
method.&lt;/p&gt;

&lt;p&gt;Example:
    %%pipe f1 | f2 | f3
    CELL CONTENTS&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;is the same as issuing:

f3(f2(f1(&quot;CELL CONTENTS&quot;)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;processing&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%processing&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%processing - run the cell in the language Processing&lt;/p&gt;

&lt;p&gt;This cell magic will execute the contents of the cell as a
Processing program. This uses the Java-based Processing
language.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%processing
setup() {
}
draw() {
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;px-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%px&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%px - send cell to the cluster.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%px
(define x 42)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use %parallel to initialize the cluster.&lt;/p&gt;

&lt;h2 id=&quot;options-12&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-e –evaluate  evaluate code in the current kernel, too. The current kernel should be of the same language as the cluster. [default: False]
-k –kernel_name kernel name given to use for execution [default: None]&lt;/p&gt;

&lt;h2 id=&quot;python-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%python&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%python - evaluate contents of cell as Python&lt;/p&gt;

&lt;p&gt;This cell magic will evaluate the cell (either expression or
statement) as Python code.&lt;/p&gt;

&lt;p&gt;Unlike IPython’s Python, this does not return the last expression.
To do that, you need to assign the last expression to the special
variable “retval”.&lt;/p&gt;

&lt;p&gt;The -e or –eval_output flag signals that the retval value expression
will be used as code for the cell to be evaluated by the host
language.&lt;/p&gt;

&lt;p&gt;Note that the version of Python is that of the notebook server.&lt;/p&gt;

&lt;p&gt;Examples:
    %%python
    x = 42&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%python
import math
retval = x + math.pi

%%python -e
retval = &quot;'(this is code in the kernel language)&quot;

%%python -e
&quot;'(this is code in the kernel language)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;options-13&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-e –eval_output Use the retval value from the Python cell as code in the kernel language. [default: False]&lt;/p&gt;

&lt;h2 id=&quot;scheme-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%scheme&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%scheme - evaluate contents of cell as Scheme&lt;/p&gt;

&lt;p&gt;This cell magic will evaluate the cell (either expression or
statement) as Scheme code.&lt;/p&gt;

&lt;p&gt;The -e or –eval_output flag signals that the retval value expression
will be used as code for the cell to be evaluated by the host
language.&lt;/p&gt;

&lt;p&gt;Examples:
    %%scheme
    (define x 42)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%scheme
(import &quot;math&quot;)
(define retval (+ x math.pi))

%%scheme -e
(define retval &quot;this = code&quot;)

%%scheme -e
&quot;this = code&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;options-14&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-e –eval_output Use the retval value from the Scheme cell as code in the kernel language. [default: False]&lt;/p&gt;

&lt;h2 id=&quot;shell-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%shell&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%shell - run the contents of the cell as shell commands&lt;/p&gt;

&lt;p&gt;This shell command will run the cell contents in the bash shell.&lt;/p&gt;

&lt;p&gt;Example:
     %%shell
        cd ..
        ls -al&lt;/p&gt;

&lt;p&gt;Note: this is a persistent connection to a shell.
  The working directory is synchronized to that of the notebook
  before and after each call.&lt;/p&gt;

&lt;p&gt;You can also use “!!” instead of “%%shell”.&lt;/p&gt;

&lt;h2 id=&quot;show&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%show&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%show [-o]- show cell contents or results in system pager&lt;/p&gt;

&lt;p&gt;This cell magic will put the contents or results of the cell
into the system pager.&lt;/p&gt;

&lt;p&gt;Examples:
    %%show
    This information will appear in the pager.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%show --output
retval = 54 * 54
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;options-15&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-o –output    rather than showing the contents, show the results [default: False]&lt;/p&gt;

&lt;h2 id=&quot;time&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%time&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%time - show time to run cell&lt;/p&gt;

&lt;p&gt;Put this magic at the top of a cell and the amount of time
taken to execute the code will be displayed before the output.&lt;/p&gt;

&lt;p&gt;Example:
    %%time
    [code for your language goes here!]&lt;/p&gt;

&lt;p&gt;This just reports real time taken to execute a program. This
may fluctuate with number of users, system, load, etc.&lt;/p&gt;

&lt;h2 id=&quot;tutor&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%tutor&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;%%tutor [–language=LANGUAGE] - show cell with
Online Python Tutor.&lt;/p&gt;

&lt;p&gt;Defaults to use the language of the current kernel.
‘python’ is an alias for ‘python3’.&lt;/p&gt;

&lt;p&gt;Examples:
   %%tutor -l python3
   a = 1
   b = 1
   a + b&lt;/p&gt;

&lt;p&gt;[You will see an iframe with the pythontutor.com page
   including the code above.]&lt;/p&gt;

&lt;p&gt;%%tutor –language=java&lt;/p&gt;

&lt;p&gt;public class Test {
       public Test() {
       }
       public static void main(String[] args) {
           int x = 1;
           System.out.println(“Hi”);
       }
   }&lt;/p&gt;

&lt;h2 id=&quot;options-16&quot;&gt;Options:&lt;/h2&gt;
&lt;p&gt;-l –language  Possible languages to be displayed within the iframe. Possible values are: python, python2, python3, java, javascript&lt;/p&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="jupyter" /><category term="lingmagic" /><summary type="html">%activity %activity FILENAME - run a widget-based activity (poll, classroom response, clicker-like activity) This magic will load the JSON in the filename. Examples: %activity /home/teacher/activity1 %activity /home/teacher/activity1 new %activity /home/teacher/activity1 edit %cd %cd PATH - change current directory of session This line magic is used to change the directory of the notebook or console. Note that this is not the same directory as used by the %shell magics. Example: %cd .. %connect_info %connect_info - show connection information This line magic will show the connection information for this language kernel instance. This information is only necessary if you are interested in making additional connections to the running kernel. Example: %connect_info Paste the given JSON into a file, and connect with: $&amp;gt; ipython &amp;lt;app&amp;gt; --existing &amp;lt;file&amp;gt; or, if you are local, you can connect with just: $&amp;gt; ipython &amp;lt;app&amp;gt; --existing %(key)s or even just: $&amp;gt; ipython --existing if this is the most recent Jupyter session you have started. %conversation %conversation ID - insert conversation by ID %%conversation ID - insert conversation by ID %dot %dot CODE - render code as Graphviz image This line magic will render the Graphiz CODE, and render it as an image. Example: %dot graph A { a-&amp;gt;b }; %download %download URL [-f FILENAME] - download file from URL This line magic will download and save a file. By default it will use the same filename as the URL. You can give it another name using -f. Examples: %%download http://some/file/from/internet.txt -f myfile.txt %%download http://some/file/from/program.ss Options: -f –filename use the provided name as filename [default: None] %edit %edit FILENAME - load code from filename into next cell for editing This line magic will open the file in the next cell, and allow you edit it. This is a shortcut for %load, and appending a “%%file” as first line. Example: %edit myprogram.ss %get %get VARIABLE - get a variable from the kernel in a Python-type. This line magic is used to get a variable. Examples: %get x %help This is MetaKernel Python. It implements a Python interpreter. %html %html CODE - display code as HTML This line magic will send the CODE to the browser as HTML. Example: %html This is underlined! %include %include FILENAME … - include code from filename into this code This line magic will get the contents of a file and include it in this cell evaluation. You can have multiple %include’s at the beginning of a cell, and they will be included in order. Examples: %include myprog.py %include myprog1.py myprog2.py %install %install PACKAGE - install package Example: %install calico-spell-check %install_magic %install_magic URL - download and install magic from URL This line magic will copy the file at the URL into your personal magic folder. Example: %install_magic http://path/to/some/magic.py %javascript %javascript CODE - send code as JavaScript This line magic will execute the CODE on the line as JavaScript in the browser. Example: %javascript console.log(“Print in the browser console”) %jigsaw %jigsaw LANGUAGE - show visual code editor/generator This line magic will allow visual code editing or generation. Examples: %jigsaw Processing %jigsaw Python %jigsaw Processing –workspace workspace1 Options: -w –workspace use the provided name as workspace filename [default: None] %kernel %kernel MODULE CLASS [-k NAME] - construct a kernel for sending code. This line magic will contruct a kernel language so that you can communicate. Example: %kernel bash_kernel BashKernel -k bash Use %kx or %%kx to send code to the kernel. Also returns the kernel as output. Options: -k –kernel_name kernel name given to use for execution [default: default] %kx %kx CODE [-k NAME] - send the code to the kernel. This line magic will send the CODE to the kernel for execution. Returns the result of the execution as output. Example: %kernel ls -al Use %kernel MODULE CLASS [-k NAME] to create a kernel. Options: -k –kernel_name kernel name given to use for execution [default: None] %latex %latex TEXT - display text as LaTeX This line magic will display the TEXT on the line as LaTeX. Example: %latex x_1 = \dfrac{a}{b} %load %load FILENAME - load code from filename into next cell This line magic will get the contents of a file and load it into the next cell. Example: %load myprog.py %ls %ls PATH - list files and directories under PATH This line magic is used to list the directory contents. Examples: %ls . %ls .. Options: -r –recursive recursively descend into subdirectories [default: False] %lsmagic %lsmagic - list the current line and cell magics This line magic will list all of the available cell and line magics installed in the system and in your personal magic folder. Example: %lsmagic %macro %macro NAME - execute a macro %macro -l [all|learned|system] - list macros %macro [-s] [-d] NAME - show or delete a macro This line macro will execute, show, list, or delete the named macro. Examples: %macro renumber-cells %%macro test print &quot;Ok!&quot; %macro -l all %macro -d test Options: -s –show show macro [default: False] -l –list list macros [default: False] -d –delete delete a named macro [default: False] %magic %magic - show installed magics This line magic shows all of the install magics, either from the system magic folder, or your own private magic folder. %matplotlib %matplotlib BACKEND - set the matplotlib backend to BACKEND This line magic will set (and reload) the items associated with the matplotlib backend. Also, monkeypatches the IPython.display.display to work with metakernel-based kernels. Example: %matplotlib notebook import matplotlib.pyplot as plt plt.plot([3, 8, 2, 5, 1]) plt.show() %parallel %parallel MODULE CLASS [-k NAME] [-i […]] - construct an interface to the cluster. Example: %parallel bash_kernel BashKernel %parallel bash_kernel BashKernel -k bash %parallel bash_kernel BashKernel --i [0,2:5,9,...] cluster_size and cluster_rank variables are set upon initialization of the remote node (if the kernel supports %set). Use %px or %%px to send code to the cluster. Options: -i –ids the machine ids to use from the cluster [default: None] -k –kernel_name arbitrary name given to reference kernel [default: default] %plot %plot [options] backend - configure plotting for the session. This line magic will configure the plot settings for this language. Examples: %plot qt –format=png %plot inline -w 640 Note: not all languages may support the %plot magic, and not all options may be supported. Options: -h –height Plot height in pixels -w –width Plot width in pixels -r –resolution Resolution in pixels per inch -b –backend Backend selection [default: inline] -f –format Plot format (png, svg or jpg). -s –size Pixel size of plots, “width,height” %pmap %pmap FUNCTION [ARGS1,ARGS2,…] - (“parallel map”) call a FUNCTION on args This line magic will apply a function name to all of the arguments given one at a time using a dynamic load balancing scheduler. Currently, the args are provided as a Python expression (with no spaces). You must first setup a cluster using the %parallel magic. Examples: %pmap function-name-in-language range(10) %pmap function-name-in-language [1,2,3,4] %pmap run_experiment range(1,100,5) %pmap run_experiment [&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;] %pmap f [(1,4,7),(2,3,5),(7,2,2)] The function name must be a function that is available on all nodes in the cluster. For example, you could: %%px (define myfunc (lambda (n) (+ n 1))) to define myfunc on all machines (use %%px -e to also define it in the running notebook or console). Then you can apply it to a list of arguments: %%pmap myfunc range(100) The load balancer will run myfunc on the next available node in the cluster. Note: not all languages may support running a function via this magic. %px %px EXPRESSION - send EXPRESSION to the cluster. Example: %px sys.version %px -k scheme (define x 42) %px x %px cluster_rank cluster_size and cluster_rank variables are set upon initialization of the remote node (if the kernel supports %set). Use %parallel to initialize the cluster. Options: -e –evaluate evaluate code in the current kernel, too. The current kernel should be of the same language as the cluster. [default: False] -k –kernel_name kernel name given to use for execution [default: None] %python %python CODE - evaluate code as Python This line magic will evaluate the CODE (either expression or statement) as Python code. Note that the version of Python is that of the notebook server. Examples: %python x = 42 %python import math %python x + math.pi %reload_magics %reload_magics - reload the magics from the installed files Example: %reload_magics This line magic will reload the magics installed in the system, and in your private magic folder. You only need to do this if you edit a magic file. It runs automatically if you install a new magic. %restart %restart - restart session This line magic will restart the connection to the language kernel. Example: %restart Note that you will lose all computed values. %run %run [–language LANG] FILENAME - run code in filename by kernel This magic will take the code in FILENAME and run it. The exact details of how the code runs are deterimined by your language. The –language LANG option will prefix the file contents with “%%LANG”. You may also put information in the cell which will appear before the contents of the file. Examples: %run filename.ss %run -l python filename.py %kx calysto_scheme.kernel CalystoScheme %run --language kx filename.ss %run --language &quot;kx default&quot; filename.ss Note: not all languages may support %run. Options: -l –language use the provided language name as kernel [default: None] %scheme %scheme CODE - evaluate code as Scheme This line magic will evaluate the CODE (either expression or statement) as Scheme code. Examples: %scheme (define x 42) %scheme (import “math”) %scheme (+ x + math.pi) %set %set VARIABLE VALUE - set a variable in the kernel. This line magic is used to set a variable to a Python value. Examples: %set x 42 %set x [1, 2, 3] %shell %shell COMMAND - run the line as a shell command This line command will run the COMMAND in the bash shell. Examples: %shell ls -al %shell cd Note: this is a persistent connection to a shell. The working directory is synchronized to that of the notebook before and after each call. You can also use “!” instead of “%shell”. Cell Magics %%activity %%activity FILENAME - make an activity from a JSON structure This magic will construct a Python file from the cell’s content, a JSON structure. Example: %%activity /home/teacher/activity1 {“activity”: “poll”, “instructors”: [“teacher01”], “results_file”: “/home/teacher/activity1.results”, “items”: [{“id”: “…”, “type”: “multiple choice”, “question”: “…”, “options”: [“…”, …] }, …] } In this example, users will load /home/teacher/activity1 %%brain %%brain - run a cell as brain control code for a calysto.simulation. Requires calysto. Examples: %%brain robot.forward(1) %%conversation %conversation ID - insert conversation by ID %%conversation ID - insert conversation by ID %%debug %%debug - step through the code expression by expression This cell magic will step through the code in the cell, if the kernel supports debugging. Example: %%debug (define x 1) %%dot %%dot - render contents of cell as Graphviz image This cell magic will send the cell to the browser as HTML. Example: %%dot graph A { a-&amp;gt;b }; %%file %%file [–append -a] FILENAME - write contents of cell to file This cell magic will create or append the cell contents into/onto a file. Example: %%file -a log.txt This will append this line onto the file “log.txt” Options: -a –append append onto an existing file [default: False] %%help This is MetaKernel Python. It implements a Python interpreter. %%html %%html - display contents of cell as HTML This cell magic will send the cell to the browser as HTML. Example: %%html &amp;lt;script src=&quot;...&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div&amp;gt;Contents of div tag&amp;lt;/div&amp;gt; %%javascript %%javascript - send contents of cell as JavaScript This cell magic will execute the contents of the cell as JavaScript in the browser. Example: %%javascript element.html(&quot;Hello this is &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;!&quot;) %%kx %%kx [-k NAME] - send the cell code to the kernel. This cell magic will send the cell to be evaluated by the kernel. The kernel must have been created use the %%kernel magic. Returns the result of the execution as output. Example: %%kernel bash ls -al Use %kernel MODULE CLASS [-k NAME] to create a kernel. Options: -k –kernel_name kernel name given to use for execution [default: None] %%latex %%latex - display contents of cell as LaTeX This cell magic will display the TEXT in the cell as LaTeX. Example: %%latex x_1 = \dfrac{a}{b} x_2 = a^{n - 1} %%macro %%macro NAME - learn a new macro This cell macro will learn the macro in the cell. The cell contents are just commands (macros or code in the kernel language). Example: %%macro test print “Ok!” %macro test Ok! %%pipe %%pipe FUNCTION1 FUNCTION2 … The pipe cell will “pipe” the contents of a cell through a series of function calls. All of the functions must be defined in the language, and the kernel must support the do_function_direct method. Example: %%pipe f1 | f2 | f3 CELL CONTENTS is the same as issuing: f3(f2(f1(&quot;CELL CONTENTS&quot;))) %%processing %%processing - run the cell in the language Processing This cell magic will execute the contents of the cell as a Processing program. This uses the Java-based Processing language. Example: %%processing setup() { } draw() { } %%px %%px - send cell to the cluster. Example: %%px (define x 42) Use %parallel to initialize the cluster. Options: -e –evaluate evaluate code in the current kernel, too. The current kernel should be of the same language as the cluster. [default: False] -k –kernel_name kernel name given to use for execution [default: None] %%python %%python - evaluate contents of cell as Python This cell magic will evaluate the cell (either expression or statement) as Python code. Unlike IPython’s Python, this does not return the last expression. To do that, you need to assign the last expression to the special variable “retval”. The -e or –eval_output flag signals that the retval value expression will be used as code for the cell to be evaluated by the host language. Note that the version of Python is that of the notebook server. Examples: %%python x = 42 %%python import math retval = x + math.pi %%python -e retval = &quot;'(this is code in the kernel language)&quot; %%python -e &quot;'(this is code in the kernel language)&quot; Options: -e –eval_output Use the retval value from the Python cell as code in the kernel language. [default: False] %%scheme %%scheme - evaluate contents of cell as Scheme This cell magic will evaluate the cell (either expression or statement) as Scheme code. The -e or –eval_output flag signals that the retval value expression will be used as code for the cell to be evaluated by the host language. Examples: %%scheme (define x 42) %%scheme (import &quot;math&quot;) (define retval (+ x math.pi)) %%scheme -e (define retval &quot;this = code&quot;) %%scheme -e &quot;this = code&quot; Options: -e –eval_output Use the retval value from the Scheme cell as code in the kernel language. [default: False] %%shell %%shell - run the contents of the cell as shell commands This shell command will run the cell contents in the bash shell. Example: %%shell cd .. ls -al Note: this is a persistent connection to a shell. The working directory is synchronized to that of the notebook before and after each call. You can also use “!!” instead of “%%shell”. %%show %%show [-o]- show cell contents or results in system pager This cell magic will put the contents or results of the cell into the system pager. Examples: %%show This information will appear in the pager. %%show --output retval = 54 * 54 Options: -o –output rather than showing the contents, show the results [default: False] %%time %%time - show time to run cell Put this magic at the top of a cell and the amount of time taken to execute the code will be displayed before the output. Example: %%time [code for your language goes here!] This just reports real time taken to execute a program. This may fluctuate with number of users, system, load, etc. %%tutor %%tutor [–language=LANGUAGE] - show cell with Online Python Tutor. Defaults to use the language of the current kernel. ‘python’ is an alias for ‘python3’. Examples: %%tutor -l python3 a = 1 b = 1 a + b [You will see an iframe with the pythontutor.com page including the code above.] %%tutor –language=java public class Test { public Test() { } public static void main(String[] args) { int x = 1; System.out.println(“Hi”); } } Options: -l –language Possible languages to be displayed within the iframe. Possible values are: python, python2, python3, java, javascript</summary></entry><entry><title type="html">pip使用技巧</title><link href="https://dygck.github.io/auto-pip-usage-skill" rel="alternate" type="text/html" title="pip使用技巧" /><published>2018-10-05T19:22:10+08:00</published><updated>2018-10-05T19:22:10+08:00</updated><id>https://dygck.github.io/auto-pip-usage-skill</id><content type="html" xml:base="https://dygck.github.io/auto-pip-usage-skill">&lt;p&gt;本文列出一些安装更新python模块的技巧。比如自动更新所有Python模块。&lt;/p&gt;

&lt;h2 id=&quot;自动更新所有python模块&quot;&gt;自动更新所有Python模块。&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;shell版本&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;line &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;pip list &lt;span class=&quot;nt&quot;&gt;--outdated&lt;/span&gt;|cut &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 1|sed 1,2d&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip install &lt;span class=&quot;nt&quot;&gt;--upgrade&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;powershell版本&lt;/p&gt;

    &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;# 当只有一个模块需要更新会报错！&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;pip list -o&lt;span class=&quot;o&quot;&gt;)[&lt;/span&gt;2..1000]|foreach &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.split&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)[&lt;/span&gt;0]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|foreach &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pip install --upgrade &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;备份本地安装了的模块文件清单并使用清单批量安装模块&quot;&gt;备份本地安装了的模块文件清单，并使用清单批量安装模块。&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;备份本地安装清单&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pip freeze &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;appnope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.1.0
 &lt;span class=&quot;nv&quot;&gt;asn1crypto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.24.0
 &lt;span class=&quot;nv&quot;&gt;astroid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.0.4
 &lt;span class=&quot;nv&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;18.2.0
 &lt;span class=&quot;nv&quot;&gt;Automat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.7.0
 &lt;span class=&quot;nv&quot;&gt;autopep8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.4
 &lt;span class=&quot;nv&quot;&gt;backcall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.1.0
 &lt;span class=&quot;nv&quot;&gt;beautifulsoup4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;4.6.3
 &lt;span class=&quot;nv&quot;&gt;bleach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;3.0.0
 &lt;span class=&quot;nv&quot;&gt;bs4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.0.1
 &lt;span class=&quot;nv&quot;&gt;certifi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2018.8.24
 &lt;span class=&quot;nv&quot;&gt;cffi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.11.5
 &lt;span class=&quot;nv&quot;&gt;chardet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;3.0.4
 &lt;span class=&quot;nv&quot;&gt;constantly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;15.1.0
 &lt;span class=&quot;nv&quot;&gt;cryptography&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.3.1
 &lt;span class=&quot;nv&quot;&gt;cssselect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.0.3
 &lt;span class=&quot;nv&quot;&gt;decorator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;4.3.0
 &lt;span class=&quot;nv&quot;&gt;defusedxml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.5.0
 dict-cli&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.3.4
 &lt;span class=&quot;nv&quot;&gt;docopt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.6.2
 &lt;span class=&quot;nv&quot;&gt;entrypoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.2.3
 &lt;span class=&quot;nv&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.16.0
 &lt;span class=&quot;nv&quot;&gt;html5lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.0.1
 &lt;span class=&quot;nv&quot;&gt;hyperlink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;18.0.0
 &lt;span class=&quot;nv&quot;&gt;idna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;2.7
 &lt;span class=&quot;nv&quot;&gt;incremental&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;17.5.0
 &lt;span class=&quot;nv&quot;&gt;ipykernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;5.0.0
 &lt;span class=&quot;nv&quot;&gt;ipyparallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;6.2.2
 &lt;span class=&quot;nv&quot;&gt;ipython&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;7.0.1
 ipython-genutils&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;0.2.0
 &lt;span class=&quot;nv&quot;&gt;ipywidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;7.4.2

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通过requirements安装所有库.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pip install &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="python" /><category term="powershell" /><summary type="html">本文列出一些安装更新python模块的技巧。比如自动更新所有Python模块。 自动更新所有Python模块。 shell版本 #!/bin/bash for line in `pip list --outdated|cut -d &quot; &quot; -f 1|sed 1,2d` do sudo pip install --upgrade $line done powershell版本 # 当只有一个模块需要更新会报错！ (pip list -o)[2..1000]|foreach ($_.split(&quot; &quot;)[0])|foreach {pip install --upgrade $_} 备份本地安装了的模块文件清单，并使用清单批量安装模块。 备份本地安装清单 pip freeze &amp;gt; requirements.txt appnope==0.1.0 asn1crypto==0.24.0 astroid==2.0.4 attrs==18.2.0 Automat==0.7.0 autopep8==1.4 backcall==0.1.0 beautifulsoup4==4.6.3 bleach==3.0.0 bs4==0.0.1 certifi==2018.8.24 cffi==1.11.5 chardet==3.0.4 constantly==15.1.0 cryptography==2.3.1 cssselect==1.0.3 decorator==4.3.0 defusedxml==0.5.0 dict-cli==1.3.4 docopt==0.6.2 entrypoints==0.2.3 future==0.16.0 html5lib==1.0.1 hyperlink==18.0.0 idna==2.7 incremental==17.5.0 ipykernel==5.0.0 ipyparallel==6.2.2 ipython==7.0.1 ipython-genutils==0.2.0 ipywidgets==7.4.2 通过requirements安装所有库. pip install -r requirements.txt</summary></entry><entry><title type="html">jekyll 命令练习</title><link href="https://dygck.github.io/jekyll-exercise" rel="alternate" type="text/html" title="jekyll 命令练习" /><published>2018-10-03T00:00:00+08:00</published><updated>2018-10-03T00:00:00+08:00</updated><id>https://dygck.github.io/jekyll-exercise</id><content type="html" xml:base="https://dygck.github.io/jekyll-exercise">&lt;h2 id=&quot;jekyll-命令行参数&quot;&gt;jekyll 命令行参数&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new  &lt;/code&gt; 创建文件基本框架&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll bulid&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll b path&lt;/code&gt; 输出网页文件,默认输出到./_site文件下面&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekeyll serve&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll s path&lt;/code&gt;在本地调试编写的网页。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll doctor&lt;/code&gt;诊断问题&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekeyll new-theme themename&lt;/code&gt;创建一个新的主题框架&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll clean&lt;/code&gt;移除生成的网页和元数据&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll help&lt;/code&gt;jekyll 提供的帮助。如:jekyll help build.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;全局配置&quot;&gt;全局配置&lt;/h2&gt;

&lt;p&gt;可以使用命令行和修改&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;文件的方式设置。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;设置选项&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;配置文件方法&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;命令行方法&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;改变jekyll读取构建网站文件的地址&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source: dir&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;改变jekyll输出网站文件的目录&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;destination: dir&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;安全，禁用自定义插件并且忽略软链接&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;safe: bool&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--safe&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;将一些目录中的文件排除，不被jekyll扫描到&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exlude: [dir,file]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;强制包括的文件，如&lt;code class=&quot;highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt;（默认是排除以点开头的文件）&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;include: [dir,file, …]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当破坏网站目录的时候强制保留的文件，对于不是由jekyll生成的文件很有用;例如由编译工具生成的文件或资源。&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;keep_files: [dir,file,…]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时区&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;timezone: Asia/Shanghai&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;自动重新生成&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-w&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;--[no-]watch&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;自定义配置文件路径&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--config [file1,file2,…]&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;详细输出&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-V,–verbose&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;增量编译，只编译新的文件。&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;incremental: Bool&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-I&lt;/code&gt; ,&lt;code class=&quot;highlighter-rouge&quot;&gt;--incremental&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="jekyll" /><summary type="html">jekyll 命令行参数 jekyll new 创建文件基本框架 jekyll bulid或jekyll b path 输出网页文件,默认输出到./_site文件下面 jekeyll serve或jekyll s path在本地调试编写的网页。 jekyll doctor诊断问题 jekeyll new-theme themename创建一个新的主题框架 jekyll clean移除生成的网页和元数据 jekyll helpjekyll 提供的帮助。如:jekyll help build. 全局配置 可以使用命令行和修改_config.yml文件的方式设置。 设置选项 配置文件方法 命令行方法 改变jekyll读取构建网站文件的地址 source: dir -s 改变jekyll输出网站文件的目录 destination: dir -d 安全，禁用自定义插件并且忽略软链接 safe: bool --safe 将一些目录中的文件排除，不被jekyll扫描到 exlude: [dir,file] - 强制包括的文件，如.htaccess（默认是排除以点开头的文件） include: [dir,file, …] - 当破坏网站目录的时候强制保留的文件，对于不是由jekyll生成的文件很有用;例如由编译工具生成的文件或资源。 keep_files: [dir,file,…] - 时区 timezone: Asia/Shanghai - 自动重新生成 - -w,--[no-]watch 自定义配置文件路径 - --config [file1,file2,…] 详细输出 - -V,–verbose 增量编译，只编译新的文件。 incremental: Bool -I ,--incremental</summary></entry><entry><title type="html">sublime_text 配置技巧</title><link href="https://dygck.github.io/sublime-settings-notes" rel="alternate" type="text/html" title="sublime_text 配置技巧" /><published>2018-10-02T05:30:05+08:00</published><updated>2018-10-02T05:30:05+08:00</updated><id>https://dygck.github.io/sublime-settings-notes</id><content type="html" xml:base="https://dygck.github.io/sublime-settings-notes">&lt;p&gt;这里记录一些有关sublimetxt使用的一些技巧，做个备忘。&lt;/p&gt;

&lt;h2 id=&quot;sublimetext的程序菜单选项分别由一下文件组成&quot;&gt;sublimetext的程序菜单选项分别由一下文件组成。&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+ Main.sublime-menu (也就是主菜单选项，通过修改这个文件可以修改主菜单的选项名等。)
+ Side Bar.sublime-menu (侧边栏右键菜单，同样可以修改选项名)
+ Context.sublime-menu (文本编辑窗口右键菜单)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;修改首选项插件设置行为使打开设置为默认和用户分屏效果&quot;&gt;修改首选项插件设置行为，使打开设置为默认和用户分屏效果.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;json格式&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;edit_settings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;args&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;根据插件的名字来修改下面&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;个路径的名字，一个是插件默认设置的安装位置，一个是用户安装位置。&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;base_file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${packages}/SideBarEnhancements/Side Bar.sublime-settings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${packages}/User/Side Bar.sublime-settings&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;caption&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Settings&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置的xml代码片段&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ${packages}需要转义！ --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;snippet&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;content&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[
{
    &quot;command&quot;: &quot;edit_settings&quot;,
    &quot;caption&quot;: &quot;设置&quot;,
    &quot;args&quot;:
    {
        &quot;base_file&quot;: &quot;\$\{packages\}/${1:package_name}/${1:package_name}.sublime-settings&quot;,
        &quot;default&quot;: &quot;// Settings in here override those in \&quot;${1:package_name}/${1:package_name}.sublime-settings\&quot;,\n// and are overridden in turn by syntax-specific settings.\n{\n\t$0\n}\n&quot;
    },
},
]]&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/content&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;tabTrigger&amp;gt;&lt;/span&gt;st&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tabTrigger&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;source.json&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/snippet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;快捷键设置代码片段&quot;&gt;快捷键设置代码片段&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: 快捷键的设置是大小写敏感的,都是小写键来设置快捷键!&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;snippet&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;content&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[
{
    &quot;keys&quot;:[&quot;${1:}&quot;],
    &quot;command&quot;: &quot;${2:}&quot;,
    ${3:&quot;args&quot;:
    {
        $4
    }
    }
}]]&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/content&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;tabTrigger&amp;gt;&lt;/span&gt;kb&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tabTrigger&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;source.json&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;按键绑定片段&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/snippet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sublime_keybind.gif&quot; alt=&quot;snippet paly&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;recent_update&quot; style=&quot;text-align: right;color: #108080;font-style: italic;font-size: large;&quot;&gt;最后更新:2018-10-02 20:55:08&lt;/p&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="sublimetext" /><summary type="html">这里记录一些有关sublimetxt使用的一些技巧，做个备忘。 sublimetext的程序菜单选项分别由一下文件组成。 + Main.sublime-menu (也就是主菜单选项，通过修改这个文件可以修改主菜单的选项名等。) + Side Bar.sublime-menu (侧边栏右键菜单，同样可以修改选项名) + Context.sublime-menu (文本编辑窗口右键菜单) 修改首选项插件设置行为，使打开设置为默认和用户分屏效果. json格式 { &quot;command&quot;: &quot;edit_settings&quot;, &quot;args&quot;: { // 根据插件的名字来修改下面2个路径的名字，一个是插件默认设置的安装位置，一个是用户安装位置。 &quot;base_file&quot;: &quot;${packages}/SideBarEnhancements/Side Bar.sublime-settings&quot;, &quot;default&quot;: &quot;${packages}/User/Side Bar.sublime-settings&quot; }, &quot;caption&quot;: &quot;Settings&quot; }, 设置的xml代码片段 &amp;lt;!-- ${packages}需要转义！ --&amp;gt; &amp;lt;snippet&amp;gt; &amp;lt;content&amp;gt;&amp;lt;![CDATA[ { &quot;command&quot;: &quot;edit_settings&quot;, &quot;caption&quot;: &quot;设置&quot;, &quot;args&quot;: { &quot;base_file&quot;: &quot;\$\{packages\}/${1:package_name}/${1:package_name}.sublime-settings&quot;, &quot;default&quot;: &quot;// Settings in here override those in \&quot;${1:package_name}/${1:package_name}.sublime-settings\&quot;,\n// and are overridden in turn by syntax-specific settings.\n{\n\t$0\n}\n&quot; }, }, ]]&amp;gt;&amp;lt;/content&amp;gt; &amp;lt;tabTrigger&amp;gt;st&amp;lt;/tabTrigger&amp;gt; &amp;lt;scope&amp;gt;source.json&amp;lt;/scope&amp;gt; &amp;lt;/snippet&amp;gt; 快捷键设置代码片段 NOTE: 快捷键的设置是大小写敏感的,都是小写键来设置快捷键! &amp;lt;snippet&amp;gt; &amp;lt;content&amp;gt;&amp;lt;![CDATA[ { &quot;keys&quot;:[&quot;${1:}&quot;], &quot;command&quot;: &quot;${2:}&quot;, ${3:&quot;args&quot;: { $4 } } }]]&amp;gt;&amp;lt;/content&amp;gt; &amp;lt;tabTrigger&amp;gt;kb&amp;lt;/tabTrigger&amp;gt; &amp;lt;scope&amp;gt;source.json&amp;lt;/scope&amp;gt; &amp;lt;description&amp;gt;按键绑定片段&amp;lt;/description&amp;gt; &amp;lt;/snippet&amp;gt; 最后更新:2018-10-02 20:55:08</summary></entry><entry><title type="html">Microsoft.PowerShell.Utility模块介绍</title><link href="https://dygck.github.io/PowerShell-Object-commands" rel="alternate" type="text/html" title="Microsoft.PowerShell.Utility模块介绍" /><published>2018-09-28T23:56:28+08:00</published><updated>2018-09-28T23:56:28+08:00</updated><id>https://dygck.github.io/PowerShell--Object-commands</id><content type="html" xml:base="https://dygck.github.io/PowerShell-Object-commands">&lt;p&gt;这个模块包括了许多PowerShell的基础管理命令.意味着该模块是非常通用的&lt;/p&gt;

&lt;h2 id=&quot;measure-object&quot;&gt;Measure-Object&lt;/h2&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Measure-Object&lt;/code&gt; 可以用来计算一个对象的数值型属性的值，主要有 &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;max&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;min&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;sum&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;mean&lt;/code&gt;.对于一个文件可以计算，文件的行数，单词数，字符数。(lines、words、characters)&lt;/p&gt;
&lt;h3 id=&quot;alias&quot;&gt;Alias&lt;/h3&gt;
&lt;p&gt;measure&lt;/p&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;统计某个文件的行数、字符数、文件数。
    &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 查看win10系统hosts文件夹的行号，单词数，字符数。&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$hosts&lt;/span&gt; ; &lt;span class=&quot;nb&quot;&gt;Get-Content&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hosts&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Get-Content&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hosts&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Measure-Object&lt;/span&gt; -Line -Word -Character
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/images/ps_measure02.jpg&quot; alt=&quot;hosts&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;计算对象数值型属性的常用统计量。
    &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 获得了windows中以vm开头的进程的cpu占有率这个数值型属性的最大值、最小值、平均值和数量特征。&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 使用tee对象将get-process输出结果保存到a.txt，同时传递给管道，作为measure-object输入，&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 并计算数值型属性 cpu占有率的常用统计量。最后打印出a.txt结果，与measure计算结果进行比较来验证命令的准确性。&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Get-Process &lt;/span&gt;vm&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; |tee a.txt | &lt;span class=&quot;nb&quot;&gt;Measure-Object&lt;/span&gt; -Property  CPU -Average -Maximum -Minimum;Get-Content .\a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/images/ps_measure01.jpg&quot; alt=&quot;get-process&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;compare-object&quot;&gt;Compare-Object&lt;/h2&gt;
&lt;h3 id=&quot;description-1&quot;&gt;Description&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;比较2个对象的属性的区别,对于文件内容,根据每行的内容比较.默认输入2个对象分别是 &lt;code class=&quot;highlighter-rouge&quot;&gt;reference&lt;/code&gt;
和 &lt;code class=&quot;highlighter-rouge&quot;&gt;difference&lt;/code&gt;.当对象的某个内容只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;reference&lt;/code&gt; 有,则会输出这样的符号 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&lt;/code&gt; 表示只有该对象才有的内容,
反之,当对象的某个内容或者属性只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;difference&lt;/code&gt; 有,则会标记这样的符号 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&amp;gt;&lt;/code&gt;.当2个对象的某个属性都相同则使用这个 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;默认情况下,当2个对象完全相同的情况下没有返回值.当其他一个对象为空的时候,报错.并且仅输出2个对象之间不同的地方.&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-IncludeEqual&lt;/code&gt; 参数可以输出2个对象属性相同的地方.使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-ExcludeDifferent&lt;/code&gt;参数只显示对象相同的属性.&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-CaseSensitive&lt;/code&gt; 来确定比较是否大小写敏感,使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-Culture&lt;/code&gt; 参数来指定区域型比较(不懂).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;alias-1&quot;&gt;Alias&lt;/h3&gt;
&lt;p&gt;compare、diff&lt;/p&gt;

&lt;h3 id=&quot;examples-1&quot;&gt;Examples&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;使用默认方法,比较2个文本的内容.
    &lt;ol&gt;
      &lt;li&gt;文本名分别为 reference、difference,内容如下：
        &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;#文件a reference&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# 文件b difference&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;比较结果.
        &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ./reference;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ./difference
 &lt;span class=&quot;nb&quot;&gt;Compare-Object&lt;/span&gt; -ReferenceObject &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; -DifferenceObject &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;&lt;img src=&quot;/assets/images/ps_compare01.png&quot; alt=&quot;compare-object&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;输出相等行比较的结果.添加参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;-InclueEqual&lt;/code&gt;
    &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Compare-Object&lt;/span&gt; -ReferenceObject &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; -DifferenceObject &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; -IncludeEqual
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/images/ps_compare02.png&quot; alt=&quot;inclued-equal&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;比较对象的属性.仍然使用之前的文件作为例子.当然比较其他对象也适用.
    &lt;ol&gt;
      &lt;li&gt;获取对象的属性
        &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;|Get-Member -MemberType Property ,NoteProperty &lt;span class=&quot;c1&quot;&gt;# 输出只有length属性&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;&lt;img src=&quot;/assets/images/ps_compare03.png&quot; alt=&quot;get-property&quot; title=&quot;get-property&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;比较length属性
        &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;Compare-Object&lt;/span&gt; -ReferenceObject &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; -DifferenceObject &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; -Property length -IncludeEqual
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;可以看到有两行长度相等都为1,即一个字符,另外有一行&lt;code class=&quot;highlighter-rouge&quot;&gt;DifferenceObject&lt;/code&gt;是长度为2,’ReferenceObject’是长度为1.
 &lt;img src=&quot;/assets/images/ps_compare04.png&quot; alt=&quot;compare-property&quot; title=&quot;get-property&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;扩展函数&lt;code class=&quot;highlighter-rouge&quot;&gt;Compare-ObjectProperties&lt;/code&gt;比较2个对象的所有属性,在这里找到的! &lt;a href=&quot;https://blogs.technet.microsoft.com/janesays/2017/04/25/compare-all-properties-of-two-objects-in-windows-powershell/&quot;&gt;源码地址&lt;/a&gt;,仍然使用2个文件作为实例.
    &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;# 原函数部分,可以用来比较2个对象所有属性的不同.&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;Function &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Compare&lt;/span&gt;-ObjectProperties &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;PSObject]&lt;span class=&quot;nv&quot;&gt;$ReferenceObject&lt;/span&gt;,
     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;PSObject]&lt;span class=&quot;nv&quot;&gt;$DifferenceObject&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$objprops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-Member&lt;/span&gt; -InputObject &lt;span class=&quot;nv&quot;&gt;$ReferenceObject&lt;/span&gt;  -MemberType Property, NoteProperty| &lt;span class=&quot;k&quot;&gt;ForEach&lt;/span&gt;-Object Name
 &lt;span class=&quot;nv&quot;&gt;$objprops&lt;/span&gt; +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Get-Member&lt;/span&gt;  -InputObject &lt;span class=&quot;nv&quot;&gt;$DifferenceObject&lt;/span&gt;  -MemberType Property, NoteProperty | &lt;span class=&quot;k&quot;&gt;ForEach&lt;/span&gt;-Object Name
 &lt;span class=&quot;nv&quot;&gt;$objprops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$objprops&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Sort-Object&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Select-Object&lt;/span&gt; -Unique
 &lt;span class=&quot;nv&quot;&gt;$diffs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; @&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$objprop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$objprops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nv&quot;&gt;$diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Compare-Object&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ReferenceObject&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DifferenceObject&lt;/span&gt; -Property &lt;span class=&quot;nv&quot;&gt;$objprop&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nv&quot;&gt;$diffprops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; @&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
             PropertyName &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$objprop&lt;/span&gt;
             RefValue     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$diff&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Where&lt;/span&gt;-Object &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.SideIndicator -eq &lt;span class=&quot;s1&quot;&gt;'&amp;lt;='&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;k&quot;&gt;ForEach&lt;/span&gt;-Object &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$objprop&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
             DiffValue    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$diff&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Where&lt;/span&gt;-Object &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.SideIndicator -eq &lt;span class=&quot;s1&quot;&gt;'=&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;k&quot;&gt;ForEach&lt;/span&gt;-Object &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$objprop&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;nv&quot;&gt;$diffs&lt;/span&gt; +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;New-Object &lt;/span&gt;PSObject -Property &lt;span class=&quot;nv&quot;&gt;$diffprops&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$diffs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$diffs&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Select-Object &lt;/span&gt;PropertyName, RefValue, DiffValue&lt;span class=&quot;o&quot;&gt;)}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 实测部分,仍然比较2个文件.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Compare&lt;/span&gt;-ObjectProperties -ReferenceObject &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; -DifferenceObject &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/images/ps_compare05.png&quot; alt=&quot;比较所有属性&quot; /&gt;
可以看出不需要指定属性就能找到有什么属性是不同的,但是这里没有提供输出属性值相同的部分.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;recent_update&quot; style=&quot;text-align: right;color: #108080;font-style: italic;font-size: large;&quot;&gt;最后更新:2018-9-30 21:42:00&lt;/p&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="PowerShell" /><summary type="html">这个模块包括了许多PowerShell的基础管理命令.意味着该模块是非常通用的 Measure-Object Description Measure-Object 可以用来计算一个对象的数值型属性的值，主要有 count max min sum mean.对于一个文件可以计算，文件的行数，单词数，字符数。(lines、words、characters) Alias measure Examples 统计某个文件的行数、字符数、文件数。 # 查看win10系统hosts文件夹的行号，单词数，字符数。 $hosts ; Get-Content $hosts Get-Content $hosts | Measure-Object -Line -Word -Character 计算对象数值型属性的常用统计量。 # 获得了windows中以vm开头的进程的cpu占有率这个数值型属性的最大值、最小值、平均值和数量特征。 # 使用tee对象将get-process输出结果保存到a.txt，同时传递给管道，作为measure-object输入， # 并计算数值型属性 cpu占有率的常用统计量。最后打印出a.txt结果，与measure计算结果进行比较来验证命令的准确性。 Get-Process vm* |tee a.txt | Measure-Object -Property CPU -Average -Maximum -Minimum;Get-Content .\a.txt Compare-Object Description 比较2个对象的属性的区别,对于文件内容,根据每行的内容比较.默认输入2个对象分别是 reference 和 difference.当对象的某个内容只有 reference 有,则会输出这样的符号 &amp;lt;= 表示只有该对象才有的内容, 反之,当对象的某个内容或者属性只有 difference 有,则会标记这样的符号 =&amp;gt;.当2个对象的某个属性都相同则使用这个 ==. 默认情况下,当2个对象完全相同的情况下没有返回值.当其他一个对象为空的时候,报错.并且仅输出2个对象之间不同的地方. 使用 -IncludeEqual 参数可以输出2个对象属性相同的地方.使用 -ExcludeDifferent参数只显示对象相同的属性. 使用 -CaseSensitive 来确定比较是否大小写敏感,使用 -Culture 参数来指定区域型比较(不懂). Alias compare、diff Examples 使用默认方法,比较2个文本的内容. 文本名分别为 reference、difference,内容如下： #文件a reference a b c # 文件b difference aa b c 比较结果. $a=cat ./reference;$b=cat ./difference Compare-Object -ReferenceObject $a -DifferenceObject $b 输出相等行比较的结果.添加参数 -InclueEqual Compare-Object -ReferenceObject $a -DifferenceObject $b -IncludeEqual 比较对象的属性.仍然使用之前的文件作为例子.当然比较其他对象也适用. 获取对象的属性 $a|Get-Member -MemberType Property ,NoteProperty # 输出只有length属性 比较length属性 Compare-Object -ReferenceObject $a -DifferenceObject $b -Property length -IncludeEqual 可以看到有两行长度相等都为1,即一个字符,另外有一行DifferenceObject是长度为2,’ReferenceObject’是长度为1. 扩展函数Compare-ObjectProperties比较2个对象的所有属性,在这里找到的! 源码地址,仍然使用2个文件作为实例. # 原函数部分,可以用来比较2个对象所有属性的不同. Function Compare-ObjectProperties { Param( [PSObject]$ReferenceObject, [PSObject]$DifferenceObject ) $objprops = Get-Member -InputObject $ReferenceObject -MemberType Property, NoteProperty| ForEach-Object Name $objprops +=Get-Member -InputObject $DifferenceObject -MemberType Property, NoteProperty | ForEach-Object Name $objprops = $objprops | Sort-Object | Select-Object -Unique $diffs = @() foreach ($objprop in $objprops) { $diff = Compare-Object $ReferenceObject $DifferenceObject -Property $objprop if ($diff) { $diffprops = @{ PropertyName = $objprop RefValue = ($diff | Where-Object {$_.SideIndicator -eq '&amp;lt;='} | ForEach-Object $($objprop)) DiffValue = ($diff | Where-Object {$_.SideIndicator -eq '=&amp;gt;'} | ForEach-Object $($objprop)) } $diffs += New-Object PSObject -Property $diffprops } } if ($diffs) {return ($diffs | Select-Object PropertyName, RefValue, DiffValue)} } # 实测部分,仍然比较2个文件. Compare-ObjectProperties -ReferenceObject $a -DifferenceObject $b 可以看出不需要指定属性就能找到有什么属性是不同的,但是这里没有提供输出属性值相同的部分. 最后更新:2018-9-30 21:42:00</summary></entry><entry><title type="html">操作符</title><link href="https://dygck.github.io/operators" rel="alternate" type="text/html" title="操作符" /><published>2018-09-23T00:00:00+08:00</published><updated>2018-09-23T00:00:00+08:00</updated><id>https://dygck.github.io/operators</id><content type="html" xml:base="https://dygck.github.io/operators">&lt;p&gt;Linux shell中的常见的操作符.&lt;/p&gt;

&lt;h2 id=&quot;分号&quot;&gt;分号&lt;/h2&gt;
&lt;p&gt;分号断句,一行一行执行,即使之前的运行失败了,也会尝试运行之后的语句.&lt;/p&gt;

&lt;h2 id=&quot;短路与&quot;&gt;短路与&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;event A &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; event B
&lt;span class=&quot;c&quot;&gt;#只有当事件A返回成功的状态码,事件B才会执行,当事件A失败,则发生短路,终止程序.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#只有A成功了,B才可以运行.A不成功就停止运行.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;短路或&quot;&gt;短路或&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;envent A　|| envent B
&lt;span class=&quot;c&quot;&gt;#事件A运行成功,结束执行,不看后面的语句.事件A运行失败,尝试运行B.如果A没有成功,就选择B。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#B应该属于一个备选方案.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;命令替换符&quot;&gt;命令替换符&lt;/h2&gt;
&lt;p&gt;将一条命令的输出,作为参数或者选项插入另一条命令&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;pfd&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#去到当前打开的Finder窗口的路径.首先PFD得到路径,并作为cd命令的实参,运行cd命令.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;管道操作符&quot;&gt;管道操作符&lt;/h2&gt;
&lt;p&gt;将管道左边命令的标准输出流(stdout)重定向(redirection)到管道右边的命令,
作为右边命令的标准输入流(stdin).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; |less
&lt;span class=&quot;c&quot;&gt;# ls列出当前目录下的文件夹和文件,less将输入流以一页一页方式显示,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# less将ls的输出作为输入,进行了一番操作。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;重定向符重写&quot;&gt;重定向符+重写&lt;/h2&gt;
&lt;p&gt;通常是将一个命令重定向到文件,这个&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;符号形象的将左边的stdout内容指向右边的容器,
这里应该是文件.如果这个文件已经存在,将会覆盖原文件的内容.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;man &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;type.txt &lt;span class=&quot;c&quot;&gt;# man命令的内容保存到文件type.txt中&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; noclobber &lt;span class=&quot;c&quot;&gt;# 意思是使用&quot;&amp;gt;&quot;这个符号,不允许覆盖已存在的文件,只能使用&quot;&amp;gt;|&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; +o noclobber &lt;span class=&quot;c&quot;&gt;# 关闭不允许覆盖功能,可以覆盖.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;重定向符追加&quot;&gt;重定向符+追加&lt;/h2&gt;
&lt;p&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;这个的区别就是将内容追加到文件中,而非覆盖.&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;的功能完全可以完成&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;的功能&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ls.txt
如果&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls.txt&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;文件存在,则将&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;命令的输出结果添加到&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls.txt&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;文本中&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
如果不存在,则功能与&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;这个一样,创建&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls.txt&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;文件,并传输内容.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tee&quot;&gt;tee&lt;/h2&gt;
&lt;p&gt;tee操作可以把标准输出重定向到文件的同时,也可以传输到标准输入.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; ~|tee list.txt|less
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; ~|tee list.txt|less
&lt;span class=&quot;c&quot;&gt;#页面查看,同时得到文件list.txt&lt;/span&gt;
Applications
Desktop
Documents
Downloads
Library
Movies
Music
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jeff</name><email>fj1945@live.cn</email></author><category term="shell" /><category term="linux" /><summary type="html">Linux shell中的常见的操作符. 分号 分号断句,一行一行执行,即使之前的运行失败了,也会尝试运行之后的语句. 短路与 event A &amp;amp;&amp;amp; event B #只有当事件A返回成功的状态码,事件B才会执行,当事件A失败,则发生短路,终止程序. #只有A成功了,B才可以运行.A不成功就停止运行. 短路或 envent A　|| envent B #事件A运行成功,结束执行,不看后面的语句.事件A运行失败,尝试运行B.如果A没有成功,就选择B。 #B应该属于一个备选方案. 命令替换符 将一条命令的输出,作为参数或者选项插入另一条命令 cd $(pfd) #去到当前打开的Finder窗口的路径.首先PFD得到路径,并作为cd命令的实参,运行cd命令. 管道操作符 将管道左边命令的标准输出流(stdout)重定向(redirection)到管道右边的命令, 作为右边命令的标准输入流(stdin). ls |less # ls列出当前目录下的文件夹和文件,less将输入流以一页一页方式显示, # less将ls的输出作为输入,进行了一番操作。 重定向符+重写 通常是将一个命令重定向到文件,这个&amp;gt;符号形象的将左边的stdout内容指向右边的容器, 这里应该是文件.如果这个文件已经存在,将会覆盖原文件的内容. man type&amp;gt;type.txt # man命令的内容保存到文件type.txt中 set -o noclobber # 意思是使用&quot;&amp;gt;&quot;这个符号,不允许覆盖已存在的文件,只能使用&quot;&amp;gt;|&quot; set +o noclobber # 关闭不允许覆盖功能,可以覆盖. 重定向符+追加 与&amp;gt;这个的区别就是将内容追加到文件中,而非覆盖.&amp;gt;&amp;gt;的功能完全可以完成&amp;gt;的功能 ls &amp;gt;&amp;gt; ls.txt 如果`ls.txt`文件存在,则将`ls`命令的输出结果添加到`ls.txt`文本中; 如果不存在,则功能与`&amp;gt;`这个一样,创建`ls.txt`文件,并传输内容. tee tee操作可以把标准输出重定向到文件的同时,也可以传输到标准输入. ls ~|tee list.txt|less $ ls ~|tee list.txt|less #页面查看,同时得到文件list.txt Applications Desktop Documents Downloads Library Movies Music</summary></entry></feed>